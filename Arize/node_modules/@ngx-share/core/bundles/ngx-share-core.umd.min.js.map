{"version":3,"sources":["ng://@ngx-share/core/lib/share.models.ts","node_modules/tslib/tslib.es6.js","ng://@ngx-share/core/lib/buttons/base.ts","ng://@ngx-share/core/lib/buttons/facebook.ts","ng://@ngx-share/core/lib/buttons/twitter.ts","ng://@ngx-share/core/lib/buttons/linkedin.ts","ng://@ngx-share/core/lib/buttons/google-plus.ts","ng://@ngx-share/core/lib/buttons/tumblr.ts","ng://@ngx-share/core/lib/buttons/pinterest.ts","ng://@ngx-share/core/lib/buttons/reddit.ts","ng://@ngx-share/core/lib/buttons/vk.ts","ng://@ngx-share/core/lib/buttons/telegram.ts","ng://@ngx-share/core/lib/buttons/messenger.ts","ng://@ngx-share/core/lib/buttons/whatsapp.ts","ng://@ngx-share/core/lib/buttons/xing.ts","ng://@ngx-share/core/lib/buttons/sms.ts","ng://@ngx-share/core/lib/buttons/email.ts","ng://@ngx-share/core/lib/buttons/print.ts","ng://@ngx-share/core/lib/buttons/copy.ts","ng://@ngx-share/core/lib/buttons/mix.ts","ng://@ngx-share/core/lib/buttons/line.ts","ng://@ngx-share/core/lib/share.defaults.ts","ng://@ngx-share/core/lib/utils.ts","ng://@ngx-share/core/lib/share.service.ts","ng://@ngx-share/core/lib/share-button.directive.ts","ng://@ngx-share/core/lib/share-count.pipe.ts","ng://@ngx-share/core/lib/share.module.ts"],"names":["SHARE_BUTTONS_CONFIG","InjectionToken","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ShareButtonBase","_props","_url","_http","_platform","_document","_windowSize","_disableButtonClick","_logger","_self","supportShareCount","defineProperty","text","ariaLabel","color","icon","undefined","desktop","IOS","ios","ANDROID","android","click","metaTags","_open","_serializeMetaTags","shareCount","url","entries","_supportedMetaTags","map","_a","_b","key","encodeURIComponent","join","serializedMetaTags","_this","Promise","resolve","sharerUrl","isBrowser","finalUrl","popUp_1","defaultView","open","pollTimer_1","setInterval","closed","clearInterval","console","warn","FacebookButton","_super","tslib_1.__extends","get","pipe","res","share","share_count","TwitterButton","description","tags","via","LinkedinButton","title","GooglePlusButton","TumblrButton","jsonp","response","note_count","PinterestButton","image","responseType","JSON","parse","replace","count","RedditButton","VkButton","TelegramButton","MessengerButton","WhatsappButton","XingButton","SmsButton","EmailButton","PrintButton","print","CopyButton","_disable","extra","successLabel","successIcon","_disableButton","_resetButton","textArea","createElement","decodeURIComponent","body","appendChild","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","readOnly","setSelectionRange","select","execCommand","removeChild","message","setTimeout","MixButton","LineButton","SHARE_BUTTONS","facebook","a","c","f","g","h","twitter","linkedin","google","pinterest","reddit","tumblr","mix","vk","telegram","messenger","whatsapp","xing","line","sms","email","copy","isObject","item","isArray","mergeDeep","target","sources","_i","arguments","length","source","shift","assign","apply","__spread","concat","ShareService","config","prop","theme","include","exclude","size","autoSetMeta","windowWidth","windowHeight","moreButtonIcon","lessButtonIcon","config$","BehaviorSubject","setConfig","Injectable","args","providedIn","Optional","type","Inject","ShareDirective","_meta","_el","_renderer","_cd","_share","_shareWindowClosed","Subscription","EMPTY","getCount","EventEmitter","opened","_getMetaTagContent","twitterAccount","emit","shareButtonName","shareButton","then","ngOnChanges","changes","_shareButtonChanged","_createShareButton","_urlChanged","getValidUrl","fallbackUrl","test","location","href","subscribe","ngOnDestroy","unsubscribe","shareButtonFactory","button","windowSize","disabled","pointerEvents","markForCheck","debug","log","removeClass","nativeElement","_buttonClass","addClass","style","setProperty","setAttribute","metaUsingProperty","getTag","getAttribute","metaUsingName","change","firstChange","previousValue","currentValue","Directive","selector","Meta","ElementRef","HttpClient","Platform","Renderer2","ChangeDetectorRef","DOCUMENT","Input","Output","HostBinding","HostListener","ShareCountPipe","transform","num","digits","shareCountFormatter","si","symbol","rx","toFixed","Pipe","name","ShareModule","withConfig","ngModule","providers","provide","useValue","NgModule","imports","PlatformModule","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ShareButtonBase } from './buttons';\r\n\r\nexport const SHARE_BUTTONS_CONFIG = new InjectionToken<ShareButtonsConfig>('shareButtonsConfig');\r\n\r\n/**\r\n * Share buttons config\r\n */\r\nexport interface ShareButtonsConfig {\r\n  prop?: IShareButtons;\r\n  theme?: string;\r\n  include?: string[];\r\n  exclude?: string[];\r\n  size?: number;\r\n  url?: string;\r\n  title?: string;\r\n  description?: string;\r\n  image?: string;\r\n  tags?: string;\r\n  twitterAccount?: string;\r\n  autoSetMeta?: boolean;\r\n  gaTracking?: boolean;\r\n  windowWidth?: number;\r\n  windowHeight?: number;\r\n  moreButtonIcon?: any;\r\n  lessButtonIcon?: any;\r\n  debug?: boolean;\r\n}\r\n\r\n/**\r\n * OG meta tags\r\n */\r\nexport interface ShareMetaTags {\r\n  url?: string;\r\n  title?: string;\r\n  description?: string;\r\n  image?: string;\r\n  tags?: string;\r\n  via?: string;\r\n}\r\n\r\n/**\r\n * Share buttons collection\r\n */\r\nexport interface IShareButtons {\r\n  facebook?: IShareButton;\r\n  twitter?: IShareButton;\r\n  linkedin?: IShareButton;\r\n  google?: IShareButton;\r\n  tumblr?: IShareButton;\r\n  mix?: IShareButton;\r\n  pinterest?: IShareButton;\r\n  reddit?: IShareButton;\r\n  vk?: IShareButton;\r\n  telegram?: IShareButton;\r\n  messenger?: IShareButton;\r\n  whatsapp?: IShareButton;\r\n  xing?: IShareButton;\r\n  line?: IShareButton;\r\n  sms?: IShareButton;\r\n  email?: IShareButton;\r\n  print?: IShareButton;\r\n  copy?: IShareButton;\r\n}\r\n\r\n/**\r\n * Share button properties\r\n */\r\nexport interface IShareButton {\r\n  /** A function that returns a new share button object  */\r\n  create?: (\r\n    prop: IShareButton,\r\n    url: () => string,\r\n    http: HttpClient,\r\n    platform: Platform,\r\n    document: Document,\r\n    windowSize: string,\r\n    disableButton: (disable: boolean) => void,\r\n    logger: (text: string) => void\r\n  ) => ShareButtonBase;\r\n  /** Share button text */\r\n  text?: string;\r\n  /** Share button icon (FontAwesome) */\r\n  icon?: any;\r\n  /** Share button color */\r\n  color?: string;\r\n  /** Share button aria label attribute */\r\n  ariaLabel?: string;\r\n  /** Used to attach more properties for certain buttons */\r\n  extra?: any;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class ShareButtonBase {\r\n\r\n  protected readonly _self: ShareButtonBase = this;\r\n\r\n  /** Share button supported meta tags */\r\n  protected readonly _supportedMetaTags: ShareMetaTags;\r\n\r\n  /** Share button label */\r\n  get text(): string {\r\n    return this._props.text;\r\n  }\r\n\r\n  /** Share button aria-label attribute */\r\n  get ariaLabel(): string {\r\n    return this._props.ariaLabel;\r\n  }\r\n\r\n  /** Share button color */\r\n  get color(): string {\r\n    return this._props.color;\r\n  }\r\n\r\n  /** Share button icon (FontAwesome) */\r\n  get icon(): string | string[] {\r\n    return this._props.icon;\r\n  }\r\n\r\n  get desktop(): string | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  get android(): string | undefined {\r\n    return this.desktop;\r\n  }\r\n\r\n  get ios(): string | undefined {\r\n    return this.desktop;\r\n  }\r\n\r\n  get sharerUrl(): string {\r\n    if (this._platform.IOS) return this.ios;\r\n    if (this._platform.ANDROID) return this.android;\r\n    return this.desktop;\r\n  }\r\n\r\n  /** If share button supports share count */\r\n  supportShareCount = false;\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              // disable button click (used in copy button)\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              // Logger function (debug mode)\r\n              protected _logger: (text: string) => void) {\r\n  }\r\n\r\n  /**\r\n   * Opens share window\r\n   */\r\n  click(metaTags: ShareMetaTags): Promise<any> {\r\n    return this._open(this._serializeMetaTags(metaTags));\r\n  }\r\n\r\n  /** Get share count of a URL */\r\n  shareCount(url: string): Observable<number> | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  protected _serializeMetaTags(metaTags: ShareMetaTags): string {\r\n    return Object.entries(this._supportedMetaTags)\r\n      .map(([key, value]) =>\r\n        metaTags[key] ? `${value}=${encodeURIComponent(metaTags[key])}` : ''\r\n      )\r\n      .join('&');\r\n  }\r\n\r\n  protected _open(serializedMetaTags: string): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      // Avoid SSR error\r\n      if (this.sharerUrl && this._platform.isBrowser) {\r\n\r\n        const finalUrl = this.sharerUrl + serializedMetaTags;\r\n\r\n        // Debug mode, log sharer link\r\n        this._logger(finalUrl);\r\n\r\n        const popUp = this._document.defaultView.open(\r\n          finalUrl,\r\n          'newwindow',\r\n          this._windowSize\r\n        );\r\n\r\n        // Resolve when share dialog is closed\r\n        if (popUp) {\r\n          const pollTimer = this._document.defaultView.setInterval(() => {\r\n            if (popUp.closed) {\r\n              this._document.defaultView.clearInterval(pollTimer);\r\n              resolve();\r\n            }\r\n          }, 200);\r\n        }\r\n      } else {\r\n        console.warn(`${this.text} button is not compatible on this Platform`);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class FacebookButton extends ShareButtonBase {\r\n\r\n  supportShareCount = true;\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'u'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://www.facebook.com/sharer/sharer.php?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  shareCount(url: string): Observable<number> {\r\n    return this._http.get(`https://graph.facebook.com?id=${url}`).pipe(\r\n      map((res: any) => +res.share.share_count)\r\n    );\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class TwitterButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url',\r\n    description: 'text',\r\n    tags: 'hashtags',\r\n    via: 'via'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://twitter.com/intent/tweet?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class LinkedinButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url',\r\n    title: 'title',\r\n    description: 'summary'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `http://www.linkedin.com/shareArticle?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class GooglePlusButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://plus.google.com/share?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class TumblrButton extends ShareButtonBase {\r\n\r\n  supportShareCount = true;\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'canonicalUrl',\r\n    description: 'caption',\r\n    tags: 'tags'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `http://tumblr.com/widgets/share/tool?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  shareCount(url: string): Observable<number> {\r\n    return this._http.jsonp(\r\n      `https://api.tumblr.com/v2/share/stats?url=${url}`,\r\n      'callback'\r\n    ).pipe(\r\n      map((res: any) => +res.response.note_count)\r\n    );\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class PinterestButton extends ShareButtonBase {\r\n\r\n  supportShareCount = true;\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url',\r\n    description: 'description',\r\n    image: 'media'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://in.pinterest.com/pin/create/button/?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  click(metaTags: ShareMetaTags): Promise<any> {\r\n    // Check if image parameter is defined\r\n    if (metaTags.image) {\r\n      return this._open(this._serializeMetaTags(metaTags));\r\n    }\r\n    console.warn('Pinterest button: image parameter is required!');\r\n  }\r\n\r\n  shareCount(url: string): Observable<number> {\r\n    return this._http.get(\r\n      `https://api.pinterest.com/v1/urls/count.json?url=${url}`,\r\n      {responseType: 'text'}\r\n    ).pipe(\r\n      map((text: string) => JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'))),\r\n      map((res: any) => +res.count)\r\n    );\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class RedditButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url',\r\n    title: 'title'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `http://www.reddit.com/submit?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class VkButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `http://vk.com/share.php?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class TelegramButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url',\r\n    description: 'text'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return 'https://t.me/share/url?';\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class MessengerButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'link'\r\n  };\r\n\r\n  get android(): string {\r\n    return 'fb-messenger://share/?';\r\n  }\r\n\r\n  get ios(): string {\r\n    return 'fb-messenger://share/?';\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class WhatsappButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    description: 'text'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://wa.me/?`;\r\n  }\r\n\r\n  get android(): string {\r\n    return `whatsapp://send?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  click(metaTags: ShareMetaTags): Promise<any> {\r\n    // Add the URL to message body\r\n    metaTags.description = metaTags.description ? `${metaTags.description}\\r\\n${this._url()}` : this._url();\r\n    const serializedMetaTags = this._serializeMetaTags(metaTags);\r\n    return this._open(serializedMetaTags);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class XingButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://www.xing.com/app/user?op=share&`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class SmsButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    description: 'body'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `sms:?`;\r\n  }\r\n\r\n  get android(): string {\r\n    return `sms:?`;\r\n  }\r\n\r\n  get ios(): string {\r\n    return 'sms:&';\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  click(metaTags: ShareMetaTags): Promise<any> {\r\n    // Add the URL to message body\r\n    metaTags.description = metaTags.description ? `${metaTags.description}\\r\\n${this._url()}` : this._url();\r\n    const serializedMetaTags = this._serializeMetaTags(metaTags);\r\n    return this._open(serializedMetaTags);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class EmailButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    title: 'subject',\r\n    description: 'body'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `mailto:?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  click(metaTags: ShareMetaTags): Promise<any> {\r\n    // Add URL to message body\r\n    metaTags.description = metaTags.description ? `${metaTags.description}\\r\\n${this._url()}` : this._url();\r\n    const serializedMetaTags = this._serializeMetaTags(metaTags);\r\n    return this._open(serializedMetaTags);\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton } from '../share.models';\r\n\r\nexport class PrintButton extends ShareButtonBase {\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  click(): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      this._document.defaultView.print();\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton } from '../share.models';\r\n\r\nexport class CopyButton extends ShareButtonBase {\r\n\r\n  private _disable: boolean;\r\n\r\n  get text() {\r\n    return this._disable ? this._props.extra.successLabel : this._props.text;\r\n  }\r\n\r\n  get icon() {\r\n    return this._disable ? this._props.extra.successIcon : this._props.icon;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n\r\n  private _disableButton() {\r\n    // Disable pointer for tiny delay\r\n    this._disable = true;\r\n    this._disableButtonClick(true);\r\n  }\r\n\r\n  private _resetButton() {\r\n    this._disable = false;\r\n    this._disableButtonClick(false);\r\n  }\r\n\r\n  click(): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const textArea: HTMLTextAreaElement = this._document.createElement('textarea') as HTMLTextAreaElement;\r\n\r\n        textArea.value = decodeURIComponent(this._url());\r\n        this._document.body.appendChild(textArea);\r\n\r\n        // highlight TextArea to copy the sharing link\r\n        if (this._platform.IOS) {\r\n          const range = this._document.createRange();\r\n          range.selectNodeContents(textArea);\r\n          const selection = this._document.defaultView.getSelection();\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n          textArea.readOnly = true;\r\n          textArea.setSelectionRange(0, 999999);\r\n        } else {\r\n          textArea.select();\r\n        }\r\n        this._document.execCommand('copy');\r\n        this._document.body.removeChild(textArea);\r\n        this._disableButton();\r\n      } catch (e) {\r\n        console.warn('Copy link failed!', e.message);\r\n      } finally {\r\n        setTimeout(() => this._resetButton(), 2000);\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { Platform } from '@angular/cdk/platform';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class MixButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://mix.com/add?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ShareButtonBase } from './base';\r\nimport { IShareButton, ShareMetaTags } from '../share.models';\r\n\r\nexport class LineButton extends ShareButtonBase {\r\n\r\n  protected _supportedMetaTags: ShareMetaTags = {\r\n    url: 'url'\r\n  };\r\n\r\n  get desktop(): string {\r\n    return `https://social-plugins.line.me/lineit/share?`;\r\n  }\r\n\r\n  constructor(protected _props: IShareButton,\r\n              protected _url: () => string,\r\n              protected _http: HttpClient,\r\n              protected _platform: Platform,\r\n              protected _document: Document,\r\n              protected _windowSize: string,\r\n              protected _disableButtonClick: (disable: boolean) => void,\r\n              protected _logger: (text: string) => void) {\r\n    super(_props, _url, _http, _platform, _document, _windowSize, _disableButtonClick, _logger);\r\n  }\r\n}\r\n","import {\r\n  CopyButton,\r\n  EmailButton,\r\n  FacebookButton,\r\n  GooglePlusButton,\r\n  LineButton,\r\n  LinkedinButton,\r\n  MessengerButton,\r\n  MixButton,\r\n  PinterestButton,\r\n  PrintButton,\r\n  RedditButton,\r\n  SmsButton,\r\n  TelegramButton,\r\n  TumblrButton,\r\n  TwitterButton,\r\n  VkButton,\r\n  WhatsappButton,\r\n  XingButton\r\n} from './buttons';\r\nimport { IShareButtons } from './share.models';\r\n\r\n\r\n/**\r\n * Default share buttons properties\r\n */\r\nexport const SHARE_BUTTONS: IShareButtons = {\r\n  facebook: {\r\n    create: (a, b, c, d, e, f, g, h) => new FacebookButton(a, b, c, d, e, f, g, h),\r\n    text: 'Facebook',\r\n    icon: ['fab', 'facebook-f'],\r\n    color: '#4267B2',\r\n    ariaLabel: 'Share on Facebook'\r\n  },\r\n  twitter: {\r\n    create: (a, b, c, d, e, f, g, h) => new TwitterButton(a, b, c, d, e, f, g, h),\r\n    text: 'Twitter',\r\n    icon: ['fab', 'twitter'],\r\n    color: '#00acee',\r\n    ariaLabel: 'Share on Twitter'\r\n  },\r\n  linkedin: {\r\n    create: (a, b, c, d, e, f, g, h) => new LinkedinButton(a, b, c, d, e, f, g, h),\r\n    text: 'LinkedIn',\r\n    icon: ['fab', 'linkedin-in'],\r\n    color: '#006fa6',\r\n    ariaLabel: 'Share on LinkedIn'\r\n  },\r\n  google: {\r\n    create: (a, b, c, d, e, f, g, h) => new GooglePlusButton(a, b, c, d, e, f, g, h),\r\n    text: 'Google+',\r\n    icon: ['fab', 'google-plus-g'],\r\n    color: '#DB4437',\r\n    ariaLabel: 'Share on Google plus'\r\n  },\r\n  pinterest: {\r\n    create: (a, b, c, d, e, f, g, h) => new PinterestButton(a, b, c, d, e, f, g, h),\r\n    text: 'Pinterest',\r\n    icon: ['fab', 'pinterest-p'],\r\n    color: '#BD091D',\r\n    ariaLabel: 'Share on Pinterest'\r\n  },\r\n  reddit: {\r\n    create: (a, b, c, d, e, f, g, h) => new RedditButton(a, b, c, d, e, f, g, h),\r\n    text: 'Reddit',\r\n    icon: ['fab', 'reddit-alien'],\r\n    color: '#FF4006',\r\n    ariaLabel: 'Share on Reddit'\r\n  },\r\n  tumblr: {\r\n    create: (a, b, c, d, e, f, g, h) => new TumblrButton(a, b, c, d, e, f, g, h),\r\n    text: 'Tumblr',\r\n    icon: ['fab', 'tumblr'],\r\n    color: '#36465D',\r\n    ariaLabel: 'Share on Tumblr'\r\n  },\r\n  mix: {\r\n    create: (a, b, c, d, e, f, g, h) => new MixButton(a, b, c, d, e, f, g, h),\r\n    text: 'Mix',\r\n    icon: ['fab', 'mix'],\r\n    color: '#ff8226',\r\n    ariaLabel: 'Share on Mix'\r\n  },\r\n  vk: {\r\n    create: (a, b, c, d, e, f, g, h) => new VkButton(a, b, c, d, e, f, g, h),\r\n    text: 'VKontakte',\r\n    icon: ['fab', 'vk'],\r\n    color: '#4C75A3',\r\n    ariaLabel: 'Share on VKontakte'\r\n  },\r\n  telegram: {\r\n    create: (a, b, c, d, e, f, g, h) => new TelegramButton(a, b, c, d, e, f, g, h),\r\n    text: 'Telegram',\r\n    icon: ['fab', 'telegram-plane'],\r\n    color: '#0088cc',\r\n    ariaLabel: 'Share on Telegram'\r\n  },\r\n  messenger: {\r\n    create: (a, b, c, d, e, f, g, h) => new MessengerButton(a, b, c, d, e, f, g, h),\r\n    text: 'Messenger',\r\n    icon: ['fab', 'facebook-messenger'],\r\n    color: '#0080FF',\r\n    ariaLabel: 'Share on Messenger'\r\n  },\r\n  whatsapp: {\r\n    create: (a, b, c, d, e, f, g, h) => new WhatsappButton(a, b, c, d, e, f, g, h),\r\n    text: 'WhatsApp',\r\n    icon: ['fab', 'whatsapp'],\r\n    color: '#25D366',\r\n    ariaLabel: 'Share on WhatsApp'\r\n  },\r\n  xing: {\r\n    create: (a, b, c, d, e, f, g, h) => new XingButton(a, b, c, d, e, f, g, h),\r\n    text: 'Xing',\r\n    icon: ['fab', 'xing'],\r\n    color: '#006567',\r\n    ariaLabel: 'Share on Xing'\r\n  },\r\n  line: {\r\n    create: (a, b, c, d, e, f, g, h) => new LineButton(a, b, c, d, e, f, g, h),\r\n    text: 'Line',\r\n    icon: ['fab', 'line'],\r\n    color: '#00b900',\r\n    ariaLabel: 'Share on Line'\r\n  },\r\n  sms: {\r\n    create: (a, b, c, d, e, f, g, h) => new SmsButton(a, b, c, d, e, f, g, h),\r\n    text: 'SMS',\r\n    icon: 'comment-alt',\r\n    color: '#20c16c',\r\n    ariaLabel: 'Share link via SMS'\r\n  },\r\n  email: {\r\n    create: (a, b, c, d, e, f, g, h) => new EmailButton(a, b, c, d, e, f, g, h),\r\n    text: 'Email',\r\n    icon: 'envelope',\r\n    color: '#FF961C',\r\n    ariaLabel: 'Share link via email'\r\n  },\r\n  print: {\r\n    create: (a, b, c, d, e, f, g, h) => new PrintButton(a, b, c, d, e, f, g, h),\r\n    text: 'Print',\r\n    icon: 'print',\r\n    color: '#765AA2',\r\n    ariaLabel: 'Print page'\r\n  },\r\n  copy: {\r\n    create: (a, b, c, d, e, f, g, h) => new CopyButton(a, b, c, d, e, f, g, h),\r\n    text: 'Copy link',\r\n    icon: 'link',\r\n    color: '#607D8B',\r\n    ariaLabel: 'Copy link',\r\n    extra: {\r\n      successLabel: 'Copied',\r\n      successIcon: 'check'\r\n    }\r\n  },\r\n};\r\n","/** Simple object check.*/\r\nfunction isObject(item): boolean {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/** Deep merge two objects.*/\r\nexport function mergeDeep(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) {\r\n          Object.assign(target, {[key]: {}});\r\n        }\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, {[key]: source[key]});\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n\r\n/** Returns a readable number from share count */\r\nexport function shareCountFormatter(num: number, digits: number): string {\r\n\r\n  const si = [\r\n    {value: 1E9, symbol: 'B'},\r\n    {value: 1E6, symbol: 'M'},\r\n    {value: 1E3, symbol: 'K'}\r\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n\r\n  for (let i = 0; i < si.length; i++) {\r\n    if (num >= si[i].value) {\r\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\r\n    }\r\n  }\r\n  return num.toFixed(digits).replace(rx, '$1');\r\n}\r\n\r\n/** Returns a valid URL or falls back to current URL */\r\nexport function getValidUrl(url: string, fallbackUrl: string): string {\r\n  if (url) {\r\n    const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n    if (r.test(url)) return url;\r\n    console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\r\n  }\r\n  return fallbackUrl;\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from './share.models';\r\nimport { SHARE_BUTTONS } from './share.defaults';\r\nimport { mergeDeep } from './utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareService {\r\n\r\n  /** Global config that applies on all share buttons in the app */\r\n  config: ShareButtonsConfig = {\r\n    prop: SHARE_BUTTONS,\r\n    theme: 'default',\r\n    include: [],\r\n    exclude: [],\r\n    size: 0,\r\n    autoSetMeta: true,\r\n    windowWidth: 800,\r\n    windowHeight: 500,\r\n    moreButtonIcon: 'ellipsis-h',\r\n    lessButtonIcon: 'minus'\r\n  };\r\n\r\n  /** Stream that emits when config changes */\r\n  config$ = new BehaviorSubject(this.config);\r\n\r\n  constructor(@Optional() @Inject(SHARE_BUTTONS_CONFIG) config: ShareButtonsConfig) {\r\n    if (config) {\r\n      this.setConfig(config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Share buttons properties, used to get the text, color and icon of each button.\r\n   */\r\n  get prop() {\r\n    return this.config.prop;\r\n  }\r\n\r\n  get windowSize() {\r\n    return `width=${this.config.windowWidth}, height=${this.config.windowHeight}`;\r\n  }\r\n\r\n  setConfig(config: ShareButtonsConfig) {\r\n    this.config = mergeDeep(this.config, config);\r\n    this.config$.next(this.config);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  SimpleChange,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer2,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Meta } from '@angular/platform-browser';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ShareService } from './share.service';\r\nimport { IShareButton, ShareMetaTags } from './share.models';\r\nimport { getValidUrl } from './utils';\r\nimport { ShareButtonBase } from './buttons';\r\n\r\n@Directive({\r\n  selector: '[shareButton], [share-button]'\r\n})\r\nexport class ShareDirective implements OnChanges, OnDestroy {\r\n\r\n  /** A ref to button class - used to remove previous class when the button type is changed */\r\n  private _buttonClass: string;\r\n\r\n  /** Share window closed event subscription */\r\n  private _shareWindowClosed = Subscription.EMPTY;\r\n\r\n  /** Button properties */\r\n  shareButton: ShareButtonBase;\r\n\r\n  /** Share button type */\r\n  @Input('shareButton') shareButtonName: string;\r\n\r\n  /** Get share count */\r\n  @Input() getCount = false;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean = this._share.config.autoSetMeta;\r\n\r\n  /** Sharing link */\r\n  @Input() url: string = this._share.config.url;\r\n\r\n  /** Sets the title parameter */\r\n  @Input() title: string = this._share.config.title;\r\n\r\n  /** Sets the description parameter */\r\n  @Input() description: string = this._share.config.description;\r\n\r\n  /** Sets the image parameter for sharing on Pinterest */\r\n  @Input() image: string = this._share.config.image;\r\n\r\n  /** Sets the tags parameter for sharing on Twitter and Tumblr */\r\n  @Input() tags: string = this._share.config.tags;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(private _meta: Meta,\r\n              private _el: ElementRef,\r\n              private _http: HttpClient,\r\n              private _platform: Platform,\r\n              private _renderer: Renderer2,\r\n              private _cd: ChangeDetectorRef,\r\n              private _share: ShareService,\r\n              @Inject(DOCUMENT) private _document: any) {\r\n  }\r\n\r\n  @HostBinding('style.pointerEvents') pointerEvents: string;\r\n\r\n  /** Share the link */\r\n  @HostListener('click')\r\n  share() {\r\n    const metaTags: ShareMetaTags = this.autoSetMeta ? {\r\n      url: this.url,\r\n      title: this.title || this._getMetaTagContent('og:title'),\r\n      description: this.description || this._getMetaTagContent('og:description'),\r\n      image: this.image || this._getMetaTagContent('og:image'),\r\n      via: this._share.config.twitterAccount,\r\n      tags: this.tags,\r\n    } : {\r\n      url: this.url,\r\n      title: this.title,\r\n      description: this.description,\r\n      image: this.image,\r\n      tags: this.tags,\r\n      via: this._share.config.twitterAccount,\r\n    };\r\n\r\n    // Emit when share dialog is opened\r\n    this.opened.emit(this.shareButtonName);\r\n    // Share the link\r\n    this.shareButton.click(metaTags).then(() =>\r\n    // Emit when share dialog is closed\r\n      this.closed.emit(this.shareButtonName)\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Avoid SSR error\r\n    if (this._platform.isBrowser) {\r\n\r\n      if (this._shareButtonChanged(changes['shareButtonName'])) {\r\n        this._createShareButton();\r\n      }\r\n\r\n      if (this._urlChanged(changes['url'])) {\r\n        this.url = getValidUrl(\r\n          this.autoSetMeta\r\n            ? this.url || this._getMetaTagContent('og:url')\r\n            : this.url,\r\n          this._document.defaultView.location.href\r\n        );\r\n\r\n        if (this.getCount && this.shareButton.supportShareCount) {\r\n          this.shareButton.shareCount(this.url).subscribe((count: number) => this.count.emit(count));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._shareWindowClosed.unsubscribe();\r\n  }\r\n\r\n  private _createShareButton() {\r\n    const shareButtonFactory: IShareButton = this._share.config.prop[this.shareButtonName];\r\n    const button: ShareButtonBase = shareButtonFactory.create(\r\n      shareButtonFactory,\r\n      // Pass the url property as a function, so the button class always gets the recent url value.\r\n      () => this.url,\r\n      this._http,\r\n      this._platform,\r\n      this._document,\r\n      this._share.windowSize,\r\n      // This function is meant for the copy button\r\n      (disabled: boolean) => {\r\n        this.pointerEvents = disabled ? 'none' : 'auto';\r\n        this._cd.markForCheck();\r\n      },\r\n      // Logger used for debugging\r\n      (text: string) => this._share.config.debug ? console.log(text) : null\r\n    );\r\n    if (button) {\r\n      // Set share button properties\r\n      this.shareButton = button;\r\n\r\n      // Remove previous button class\r\n      this._renderer.removeClass(this._el.nativeElement, `sb-${this._buttonClass}`);\r\n\r\n      // Add new button class\r\n      this._renderer.addClass(this._el.nativeElement, `sb-${this.shareButtonName}`);\r\n\r\n      // Set button css color variable\r\n      this._el.nativeElement.style.setProperty('--button-color', this.shareButton.color);\r\n\r\n      // Keep a copy of the class for future replacement\r\n      this._buttonClass = this.shareButtonName;\r\n\r\n      // Set aria-label attribute\r\n      this._renderer.setAttribute(this._el.nativeElement, 'aria-label', button.ariaLabel);\r\n    } else {\r\n      console.error(`[ShareButtons]: The share button '${this.shareButtonName}' does not exist!`);\r\n    }\r\n  }\r\n\r\n  /** Get meta tag content */\r\n  private _getMetaTagContent(key: string): string {\r\n    const metaUsingProperty: HTMLMetaElement = this._meta.getTag(`property=\"${key}\"`);\r\n    if (metaUsingProperty) return metaUsingProperty.getAttribute('content');\r\n    const metaUsingName: HTMLMetaElement = this._meta.getTag(`name=\"${key}\"`);\r\n    if (metaUsingName) return metaUsingName.getAttribute('content');\r\n  }\r\n\r\n  private _shareButtonChanged(change: SimpleChange): boolean {\r\n    return change && (change.firstChange || change.previousValue !== change.currentValue);\r\n  }\r\n\r\n  private _urlChanged(change: SimpleChange): boolean {\r\n    return !this.url || (change && change.previousValue !== change.currentValue);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { shareCountFormatter } from './utils';\r\n\r\n@Pipe({\r\n  name: 'shareCount'\r\n})\r\nexport class ShareCountPipe implements PipeTransform {\r\n  transform(num: number, digits?: number) {\r\n    return shareCountFormatter(num, digits);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\n\r\nimport { ShareDirective } from './share-button.directive';\r\nimport { ShareCountPipe } from './share-count.pipe';\r\nimport { SHARE_BUTTONS_CONFIG, ShareButtonsConfig } from './share.models';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PlatformModule\r\n  ],\r\n  declarations: [\r\n    ShareDirective,\r\n    ShareCountPipe\r\n  ],\r\n  exports: [\r\n    ShareDirective,\r\n    ShareCountPipe\r\n  ]\r\n})\r\nexport class ShareModule {\r\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareModule,\r\n      providers: [\r\n        {provide: SHARE_BUTTONS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}