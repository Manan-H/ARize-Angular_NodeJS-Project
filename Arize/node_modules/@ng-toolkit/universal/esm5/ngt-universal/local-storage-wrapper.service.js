/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
var LocalStorageWrapper = /** @class */ (function () {
    function LocalStorageWrapper(platformId) {
        if (isPlatformBrowser(platformId)) {
            this.localStorageRef = localStorage;
        }
        else {
            this.localStorageRef = {
                clear: function () { },
                getItem: function (key) { return (/** @type {?} */ (undefined)); },
                key: function (index) { return (/** @type {?} */ (undefined)); },
                removeItem: function (key) { },
                setItem: function (key, value) { },
                length: 0
            };
        }
    }
    Object.defineProperty(LocalStorageWrapper.prototype, "localStorage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.localStorageRef;
        },
        enumerable: true,
        configurable: true
    });
    LocalStorageWrapper.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    LocalStorageWrapper.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return LocalStorageWrapper;
}());
export { LocalStorageWrapper };
if (false) {
    /** @type {?} */
    LocalStorageWrapper.prototype.localStorageRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS13cmFwcGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvIiwic291cmNlcyI6WyJuZ3QtdW5pdmVyc2FsL2xvY2FsLXN0b3JhZ2Utd3JhcHBlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFcEQ7SUFJSSw2QkFBaUMsVUFBVTtRQUN2QyxJQUFJLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLElBQUksQ0FBQyxlQUFlLEdBQUcsWUFBWSxDQUFDO1NBQ3ZDO2FBQU07WUFDSCxJQUFJLENBQUMsZUFBZSxHQUFHO2dCQUN2QixLQUFLLEVBQUUsY0FBZSxDQUFDO2dCQUN2QixPQUFPLEVBQUUsVUFBQyxHQUFXLFdBQUssbUJBQUEsU0FBUyxFQUFVLEdBQUE7Z0JBQzdDLEdBQUcsRUFBRSxVQUFDLEtBQWEsV0FBSyxtQkFBQSxTQUFTLEVBQVUsR0FBQTtnQkFDM0MsVUFBVSxFQUFFLFVBQUMsR0FBVyxJQUFjLENBQUM7Z0JBQ3ZDLE9BQU8sRUFBRSxVQUFDLEdBQVcsRUFBRSxLQUFhLElBQWMsQ0FBQztnQkFDbkQsTUFBTSxFQUFFLENBQUM7YUFDUixDQUFDO1NBQ0w7SUFDTCxDQUFDO0lBRUQsc0JBQUksNkNBQVk7Ozs7UUFBaEI7WUFDSSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDaEMsQ0FBQzs7O09BQUE7O2dCQXJCSixVQUFVOzs7O2dEQUlNLE1BQU0sU0FBQyxXQUFXOztJQWtCbkMsMEJBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQXJCWSxtQkFBbUI7OztJQUM1Qiw4Q0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QsIFBMQVRGT1JNX0lEIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc1BsYXRmb3JtQnJvd3NlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb2NhbFN0b3JhZ2VXcmFwcGVyIHtcbiAgICBwcml2YXRlIGxvY2FsU3RvcmFnZVJlZjtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoUExBVEZPUk1fSUQpIHBsYXRmb3JtSWQpIHtcbiAgICAgICAgaWYgKGlzUGxhdGZvcm1Ccm93c2VyKHBsYXRmb3JtSWQpKSB7XG4gICAgICAgICAgICB0aGlzLmxvY2FsU3RvcmFnZVJlZiA9IGxvY2FsU3RvcmFnZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxTdG9yYWdlUmVmID0ge1xuICAgICAgICAgICAgY2xlYXI6ICgpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBnZXRJdGVtOiAoa2V5OiBzdHJpbmcpID0+IHVuZGVmaW5lZCBhcyBzdHJpbmcsXG4gICAgICAgICAgICBrZXk6IChpbmRleDogbnVtYmVyKSA9PiB1bmRlZmluZWQgYXMgc3RyaW5nLFxuICAgICAgICAgICAgcmVtb3ZlSXRlbTogKGtleTogc3RyaW5nKSA9PiB7Lypub29wKi99LFxuICAgICAgICAgICAgc2V0SXRlbTogKGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSA9PiB7Lypub29wKi99LFxuICAgICAgICAgICAgbGVuZ3RoOiAwXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IGxvY2FsU3RvcmFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxTdG9yYWdlUmVmO1xuICAgIH1cbn1cbiJdfQ==