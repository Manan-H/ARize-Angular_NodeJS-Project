{"version":3,"file":"ngx-share-buttons.js.map","sources":["ng://@ngx-share/buttons/lib/share-buttons.ts","ng://@ngx-share/buttons/lib/expand-button.ts","ng://@ngx-share/buttons/lib/share-buttons.module.ts"],"sourcesContent":["import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareService, ShareButtonsConfig, SHARE_BUTTONS } from '@ngx-share/core';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ninterface ButtonsState {\r\n  includedButtons?: string[];\r\n  excludedButtons?: string[];\r\n  userButtons?: string[];\r\n  selectedButtons?: string[];\r\n  expanded?: boolean;\r\n  shownCount?: number;\r\n  moreIcon?: any;\r\n  lessIcon?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'share-buttons',\r\n  templateUrl: './share-buttons.html',\r\n  styleUrls: ['./share-buttons.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButtons implements OnInit, OnDestroy {\r\n\r\n  state$: Observable<ButtonsState>;\r\n  private _state$ = new BehaviorSubject<ButtonsState>({\r\n    includedButtons: [],\r\n    excludedButtons: [],\r\n    userButtons: [],\r\n    selectedButtons: [],\r\n    expanded: true,\r\n    shownCount: Object.keys(SHARE_BUTTONS).length\r\n  });\r\n\r\n  private _configSub$ = Subscription.EMPTY;\r\n\r\n  @Input() theme = this._share.config.theme;\r\n\r\n  @Input('include') set includedButtons(includedButtons: string[]) {\r\n    this.updateState({includedButtons});\r\n  }\r\n\r\n  @Input('exclude') set excludedButtons(excludedButtons: string[]) {\r\n    this.updateState({excludedButtons});\r\n  }\r\n\r\n  @Input('show') set shownButtons(shownCount: number) {\r\n    this.updateState({shownCount});\r\n  }\r\n\r\n  /** The sharing link */\r\n  @Input() url: string;\r\n\r\n  /** The title parameter */\r\n  @Input() title: string;\r\n\r\n  /** The description parameter */\r\n  @Input() description: string;\r\n\r\n  /** The image parameter for sharing on Pinterest */\r\n  @Input() image: string;\r\n\r\n  /** The tags parameter for sharing on Twitter and Tumblr */\r\n  @Input() tags: string;\r\n\r\n  /** Sets meta tags from document head, useful when SEO is available */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show buttons icons */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show buttons text */\r\n  @Input() showText = false;\r\n\r\n  /** Show sharing count */\r\n  @Input() showCount = false;\r\n\r\n  /** Buttons size */\r\n  @Input() size = 0;\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(private _share: ShareService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state$ = this._state$.pipe(\r\n      map((state: ButtonsState) => {\r\n        // Use component include buttons, otherwise fallback to global include buttons\r\n        const includedButtons = state.includedButtons.length ? state.includedButtons : state.userButtons;\r\n        const userButtons = includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0);\r\n        const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\r\n        return {\r\n          userButtons,\r\n          selectedButtons,\r\n          expanded: state.expanded,\r\n          shownCount: state.shownCount,\r\n          moreIcon: state.moreIcon,\r\n          lessIcon: state.lessIcon\r\n        };\r\n      })\r\n    );\r\n\r\n    // Subscribe to share buttons config changes, This updates the component whenever a new button is added\r\n    this._configSub$ = this._share.config$.subscribe((config: ShareButtonsConfig) => {\r\n      // Use global include buttons, otherwise fallback to all buttons\r\n      const includedButtons = config.include.length ? config.include : Object.keys(SHARE_BUTTONS);\r\n      const userButtons = includedButtons.filter((btn) => config.exclude.indexOf(btn) < 0);\r\n      this.updateState({\r\n        userButtons,\r\n        expanded: false,\r\n        moreIcon: config.moreButtonIcon,\r\n        lessIcon: config.lessButtonIcon\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._configSub$.unsubscribe();\r\n    this._state$.complete();\r\n  }\r\n\r\n  updateState(state: ButtonsState) {\r\n    this._state$.next({...this._state$.value, ...state});\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Explanation of the above code:\r\n * ------------------------------\r\n Include buttons: includes only wanted buttons and excludes the rest\r\n Exclude buttons: excludes only the unwanted buttons\r\n User buttons = Include buttons - exclude buttons\r\n Selected Buttons = User buttons [shown number]\r\n */\r\n","import { Component, Input, Output, ElementRef, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'expand-button',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\r\n            [style.fontSize.px]=\"size\"\r\n            (click)=\"toggle.emit(!expanded)\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  `\r\n})\r\nexport class ExpandButton {\r\n\r\n  @Input() moreIcon: any;\r\n  @Input() lessIcon: any;\r\n  @Input() expanded: string;\r\n  @Input() size: number;\r\n  @Output() toggle = new EventEmitter<boolean>();\r\n\r\n  constructor(el: ElementRef) {\r\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\r\nimport { ShareButtonModule } from '@ngx-share/button';\r\n\r\nimport { ShareButtons } from './share-buttons';\r\nimport { ExpandButton } from './expand-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtons,\r\n    ExpandButton\r\n  ],\r\n  imports: [\r\n    ShareButtonModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareButtonModule,\r\n    ShareButtons\r\n  ]\r\n})\r\nexport class ShareButtonsModule {\r\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonsModule,\r\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;IAyFE,sBAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;QAhEhC,YAAO,GAAG,IAAI,eAAe,CAAe;YAClD,eAAe,EAAE,EAAE;YACnB,eAAe,EAAE,EAAE;YACnB,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM;SAC9C,CAAC,CAAC;QAEK,gBAAW,GAAG,YAAY,CAAC,KAAK,CAAC;QAEhC,UAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;;;;QAiCjC,aAAQ,GAAG,IAAI,CAAC;;;;QAGhB,aAAQ,GAAG,KAAK,CAAC;;;;QAGjB,cAAS,GAAG,KAAK,CAAC;;;;QAGlB,SAAI,GAAG,CAAC,CAAC;;;;QAGR,UAAK,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAGnC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAGpC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;KAG7C;IApDD,sBAAsB,yCAAe;;;;;QAArC,UAAsC,eAAyB;YAC7D,IAAI,CAAC,WAAW,CAAC,EAAC,eAAe,iBAAA,EAAC,CAAC,CAAC;SACrC;;;OAAA;IAED,sBAAsB,yCAAe;;;;;QAArC,UAAsC,eAAyB;YAC7D,IAAI,CAAC,WAAW,CAAC,EAAC,eAAe,iBAAA,EAAC,CAAC,CAAC;SACrC;;;OAAA;IAED,sBAAmB,sCAAY;;;;;QAA/B,UAAgC,UAAkB;YAChD,IAAI,CAAC,WAAW,CAAC,EAAC,UAAU,YAAA,EAAC,CAAC,CAAC;SAChC;;;OAAA;;;;IA4CD,+BAAQ;;;IAAR;QAAA,iBA8BC;QA7BC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC7B,GAAG,CAAC,UAAC,KAAmB;;;gBAEhB,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,WAAW;;gBAC1F,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC;;gBACrF,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;YACpG,OAAO;gBACL,WAAW,aAAA;gBACX,eAAe,iBAAA;gBACf,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ;aACzB,CAAC;SACH,CAAC,CACH,CAAC;;QAGF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,MAA0B;;;gBAEpE,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;;gBACrF,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC;YACpF,KAAI,CAAC,WAAW,CAAC;gBACf,WAAW,aAAA;gBACX,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,MAAM,CAAC,cAAc;gBAC/B,QAAQ,EAAE,MAAM,CAAC,cAAc;aAChC,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;IAED,kCAAW;;;IAAX;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KACzB;;;;;IAED,kCAAW;;;;IAAX,UAAY,KAAmB;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,cAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAK,KAAK,EAAE,CAAC;KACtD;;gBAnHF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,ivCAAmC;oBAEnC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;gBApBQ,YAAY;;;wBAmClB,KAAK;kCAEL,KAAK,SAAC,SAAS;kCAIf,KAAK,SAAC,SAAS;+BAIf,KAAK,SAAC,MAAM;sBAKZ,KAAK;wBAGL,KAAK;8BAGL,KAAK;wBAGL,KAAK;uBAGL,KAAK;8BAGL,KAAK;2BAGL,KAAK;2BAGL,KAAK;4BAGL,KAAK;uBAGL,KAAK;wBAGL,MAAM;yBAGN,MAAM;yBAGN,MAAM;;IA8CT,mBAAC;CArHD;;;;;;AChBA;IA4BE,sBAAY,EAAc;QAFhB,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QAG7C,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;KACjE;;gBA5BF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,6YAaT;iBACF;;;;gBAnBkC,UAAU;;;2BAsB1C,KAAK;2BACL,KAAK;2BACL,KAAK;uBACL,KAAK;yBACL,MAAM;;IAKT,mBAAC;CA7BD;;;;;;ACFA;IASA;KAqBC;;;;;IANQ,6BAAU;;;;IAAjB,UAAkB,MAA2B;QAC3C,OAAO;YACL,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;SAC/D,CAAC;KACH;;gBApBF,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,YAAY;wBACZ,YAAY;qBACb;oBACD,OAAO,EAAE;wBACP,iBAAiB;wBACjB,YAAY;qBACb;oBACD,OAAO,EAAE;wBACP,iBAAiB;wBACjB,YAAY;qBACb;iBACF;;IAQD,yBAAC;CArBD;;;;;;;;;;;;;;"}
