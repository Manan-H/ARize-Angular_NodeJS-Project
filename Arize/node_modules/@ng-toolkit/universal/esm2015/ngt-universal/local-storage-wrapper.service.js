/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Injectable, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
export class LocalStorageWrapper {
    /**
     * @param {?} platformId
     */
    constructor(platformId) {
        if (isPlatformBrowser(platformId)) {
            this.localStorageRef = localStorage;
        }
        else {
            this.localStorageRef = {
                clear: () => { },
                getItem: (key) => (/** @type {?} */ (undefined)),
                key: (index) => (/** @type {?} */ (undefined)),
                removeItem: (key) => { },
                setItem: (key, value) => { },
                length: 0
            };
        }
    }
    /**
     * @return {?}
     */
    get localStorage() {
        return this.localStorageRef;
    }
}
LocalStorageWrapper.decorators = [
    { type: Injectable },
];
/** @nocollapse */
LocalStorageWrapper.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
if (false) {
    /** @type {?} */
    LocalStorageWrapper.prototype.localStorageRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS13cmFwcGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctdG9vbGtpdC91bml2ZXJzYWwvIiwic291cmNlcyI6WyJuZ3QtdW5pdmVyc2FsL2xvY2FsLXN0b3JhZ2Utd3JhcHBlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHcEQsTUFBTSxPQUFPLG1CQUFtQjs7OztJQUc1QixZQUFpQyxVQUFVO1FBQ3ZDLElBQUksaUJBQWlCLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxZQUFZLENBQUM7U0FDdkM7YUFBTTtZQUNILElBQUksQ0FBQyxlQUFlLEdBQUc7Z0JBQ3ZCLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBVSxDQUFDO2dCQUN2QixPQUFPLEVBQUUsQ0FBQyxHQUFXLEVBQUUsRUFBRSxDQUFDLG1CQUFBLFNBQVMsRUFBVTtnQkFDN0MsR0FBRyxFQUFFLENBQUMsS0FBYSxFQUFFLEVBQUUsQ0FBQyxtQkFBQSxTQUFTLEVBQVU7Z0JBQzNDLFVBQVUsRUFBRSxDQUFDLEdBQVcsRUFBRSxFQUFFLEdBQVUsQ0FBQztnQkFDdkMsT0FBTyxFQUFFLENBQUMsR0FBVyxFQUFFLEtBQWEsRUFBRSxFQUFFLEdBQVUsQ0FBQztnQkFDbkQsTUFBTSxFQUFFLENBQUM7YUFDUixDQUFDO1NBQ0w7SUFDTCxDQUFDOzs7O0lBRUQsSUFBSSxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ2hDLENBQUM7OztZQXJCSixVQUFVOzs7OzRDQUlNLE1BQU0sU0FBQyxXQUFXOzs7O0lBRi9CLDhDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCwgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVdyYXBwZXIge1xuICAgIHByaXZhdGUgbG9jYWxTdG9yYWdlUmVmO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZCkge1xuICAgICAgICBpZiAoaXNQbGF0Zm9ybUJyb3dzZXIocGxhdGZvcm1JZCkpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxTdG9yYWdlUmVmID0gbG9jYWxTdG9yYWdlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2VSZWYgPSB7XG4gICAgICAgICAgICBjbGVhcjogKCkgPT4gey8qbm9vcCovfSxcbiAgICAgICAgICAgIGdldEl0ZW06IChrZXk6IHN0cmluZykgPT4gdW5kZWZpbmVkIGFzIHN0cmluZyxcbiAgICAgICAgICAgIGtleTogKGluZGV4OiBudW1iZXIpID0+IHVuZGVmaW5lZCBhcyBzdHJpbmcsXG4gICAgICAgICAgICByZW1vdmVJdGVtOiAoa2V5OiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBzZXRJdGVtOiAoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpID0+IHsvKm5vb3AqL30sXG4gICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgbG9jYWxTdG9yYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JhZ2VSZWY7XG4gICAgfVxufVxuIl19