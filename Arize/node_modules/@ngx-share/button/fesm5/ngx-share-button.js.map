{"version":3,"file":"ngx-share-button.js.map","sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareService, ShareDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  templateUrl: './share-button.html',\r\n  styleUrls: ['./share-button.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButton {\r\n\r\n  /** The sharing link */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button') set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Set the sharing link */\r\n  @Input('url') set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** The title parameter */\r\n  @Input() title: string;\r\n\r\n  /** The description parameter */\r\n  @Input() description: string;\r\n\r\n  /** The image parameter for sharing on Pinterest */\r\n  @Input() image: string;\r\n\r\n  /** The tags parameter for sharing on Twitter and Tumblr */\r\n  @Input() tags: string;\r\n\r\n  /** Sets meta tags from document head, useful when SEO is available */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Show sharing count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this._share.config.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this._share.config.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  @ViewChild(ShareDirective) ref: ShareDirective;\r\n\r\n  constructor(private _share: ShareService) {\r\n  }\r\n\r\n  onCount(count: number) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { ShareButton } from './share-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButton\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButton\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;IAmFE,qBAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;;;;QApC/B,aAAQ,GAAG,IAAI,CAAC;;;;QAGhB,aAAQ,GAAG,KAAK,CAAC;;;;QAGjB,cAAS,GAAG,KAAK,CAAC;;;;QASlB,SAAI,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;;;;QAGvC,UAAK,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;;;;QAGxC,UAAK,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAGnC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAGpC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;KAU7C;IAhED,sBAAqB,qCAAY;;;;;QAAjC,UAAkC,MAAc;YAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;;;OAAA;IAGD,sBAAkB,+BAAM;;;;;;;QAAxB,UAAyB,GAAW;YAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SAChB;;;OAAA;IAgDD,sBAA0B,oCAAW;;;;;;QAArC;YACE,OAAO,kBAAgB,IAAI,CAAC,KAAO,CAAC;SACrC;;;OAAA;;;;;IAOD,6BAAO;;;;IAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;gBAtFF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,isCAAkC;oBAElC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;gBAPQ,YAAY;;;+BAmBlB,KAAK,SAAC,QAAQ;yBAMd,KAAK,SAAC,KAAK;wBAMX,KAAK;8BAGL,KAAK;wBAGL,KAAK;uBAGL,KAAK;8BAGL,KAAK;2BAGL,KAAK;2BAGL,KAAK;4BAGL,KAAK;uBAGL,KAAK;uBAGL,KAAK;uBAGL,KAAK;wBAGL,KAAK;wBAGL,MAAM;yBAGN,MAAM;yBAGN,MAAM;8BAGN,WAAW,SAAC,OAAO;sBAInB,SAAS,SAAC,cAAc;;IAU3B,kBAAC;CAxFD;;;;;;ACHA;IAOA;KAsBC;;;;;IANQ,4BAAU;;;;IAAjB,UAAkB,MAA2B;QAC3C,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;SAC/D,CAAC;KACH;;gBArBF,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,WAAW;qBACZ;oBACD,OAAO,EAAE;wBACP,WAAW;wBACX,iBAAiB;wBACjB,YAAY;qBACb;oBACD,OAAO,EAAE;wBACP,WAAW;wBACX,iBAAiB;wBACjB,WAAW;qBACZ;iBACF;;IAQD,wBAAC;CAtBD;;;;;;;;;;;;;;"}
