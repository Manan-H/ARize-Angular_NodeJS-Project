{"version":3,"file":"ng-toolkit-universal.js.map","sources":["ng://@ng-toolkit/universal/ngt-universal/window.service.ts","ng://@ng-toolkit/universal/ngt-universal/local-storage-wrapper.service.ts","ng://@ng-toolkit/universal/ngt-universal/document.service.ts","ng://@ng-toolkit/universal/ngt-universal/ngt-universal.module.ts"],"sourcesContent":["import { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowService {\n    private _window: Window;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            // const req: any = this.injector.get(this.injector.get(USERAGENTTOKEN));\n            // this._window = {navigator: {userAgent: req.get('User-Agent')}};\n            this._window = {navigator: {userAgent: 'fakeAgent'}} as Window;\n        } else {\n            this._window = window;\n        }\n    }\n\n    get nativeWindow(): any {\n        return this._window;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class LocalStorageWrapper {\n    private localStorageRef;\n\n    constructor(@Inject(PLATFORM_ID) platformId) {\n        if (isPlatformBrowser(platformId)) {\n            this.localStorageRef = localStorage;\n        } else {\n            this.localStorageRef = {\n            clear: () => {/*noop*/},\n            getItem: (key: string) => undefined as string,\n            key: (index: number) => undefined as string,\n            removeItem: (key: string) => {/*noop*/},\n            setItem: (key: string, value: string) => {/*noop*/},\n            length: 0\n            };\n        }\n    }\n\n    get localStorage() {\n        return this.localStorageRef;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentService {\n    private _document: Document;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            this._document = <unknown> {\n                getElementById: (id: string) => new HTMLElement(),\n                getElementsByClassName: (className: string) => new HTMLCollection(),\n                getElementsByName: (name: string) => new NodeList(),\n                getElementsByTagName: (name: string) => new NodeList()\n            } as Document;\n        } else {\n            console.log('in browser, assigning document');\n            // this._document = document;\n            this._document = {} as Document;\n        }\n    }\n\n    get nativeDocument(): Document {\n        console.log('get native document');\n        console.log(this._document);\n        return this._document;\n    }\n}\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { WindowService } from './window.service';\nimport { LocalStorageWrapper } from './local-storage-wrapper.service';\nimport { DocumentService } from './document.service';\n\nexport * from './document.service';\n\nexport const WINDOW = new InjectionToken('ng-toolkit-window');\n\nexport function windowFactory(windowService: WindowService) {\n    return windowService.nativeWindow;\n}\n\nexport const LOCAL_STORAGE = new InjectionToken('ng-toolkit-local-storage');\n\nexport function localStorageFactory(localStorageWrapper: LocalStorageWrapper) {\n    return localStorageWrapper.localStorage;\n}\n\nexport const NGT_DOCUMENT = new InjectionToken('ng-toolkit-document');\n\nexport function documentFactory(documentService: DocumentService) {\n    console.log('document factory');\n    return documentService.nativeDocument;\n}\n\n@NgModule({\n    providers: [\n        WindowService,\n        { provide: WINDOW, useFactory: windowFactory, deps: [WindowService] },\n        DocumentService,\n        { provide: NGT_DOCUMENT, useFactory: documentFactory, deps: [DocumentService] },\n        LocalStorageWrapper,\n        { provide: LOCAL_STORAGE, useFactory: localStorageFactory, deps: [LocalStorageWrapper] }\n    ]\n})\nexport class NgtUniversalModule {}\n"],"names":[],"mappings":"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"}
