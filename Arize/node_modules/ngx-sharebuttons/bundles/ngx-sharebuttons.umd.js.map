{"version":3,"file":"ngx-sharebuttons.umd.js","sources":["../../tmp/classes/facebook.class.ts","../../tmp/classes/twitter.class.ts","../../tmp/classes/linkedin.class.ts","../../tmp/classes/tumblr.class.ts","../../tmp/classes/whatsapp.class.ts","../../tmp/classes/pinterest.class.ts","../../tmp/classes/reddit.class.ts","../../tmp/classes/google.class.ts","../../tmp/classes/stumble.class.ts","../../tmp/classes/telegram.class.ts","../../tmp/classes/email.class.ts","../../tmp/classes/copy.class.ts","../../tmp/classes/print.class.ts","../../tmp/classes/vk.class.ts","../../tmp/classes/index.ts","../../tmp/modules/tokens.ts","../../tmp/services/share-buttons.service.ts","../../tmp/services/universal-support.service.ts","../../tmp/directives/share-button.directive.ts","../../tmp/pipes/n-formatter.pipe.ts","../../tmp/modules/share-directive.module.ts","../../tmp/components/share-button/share-button.component.ts","../../tmp/modules/share-button.module.ts","../../tmp/components/share-buttons/share-buttons.component.ts","../../tmp/modules/share-buttons.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { IShareButton, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class FacebookButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string) {\n\n    return this.prop.shareUrl + url;\n  }\n\n  count(url: string) {\n\n    return this.http.get<ICount>(this.prop.countUrl + url)\n      .filter(res => !!(res.share && res.share.share_count))\n      .map(res => +res.share.share_count)\n      .catch(err => Observable.empty());\n  }\n}\n\n/** Facebook Count interface */\n\ninterface Share {\n  comment_count: number;\n  share_count: number;\n}\n\ninterface OgObject {\n  id: string;\n  description: string;\n  title: string;\n  type: string;\n  updated_time: Date;\n}\n\ninterface ICount {\n  share: Share;\n  og_object: OgObject;\n  id: string;\n}\n","/** TWITTER DOCS: https://dev.twitter.com/web/tweet-button/web-intent */\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class TwitterButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    if (args.description) {\n      shareUrl += '&text=' + args.description;\n    }\n\n    if (args.via) {\n      shareUrl += '&via=' + args.via;\n    }\n\n    if (args.tags) {\n      shareUrl += '&hashtags=' + args.tags;\n    }\n\n    return shareUrl;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n}\n","/** LINKEDIN DOCS https://developer.linkedin.com/docs/share-on-linkedin#! */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class LinkedinButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    if (args.title) {\n      shareUrl += '&title=' + args.title;\n    }\n    if (args.description) {\n      shareUrl += '&summary=' + args.description;\n    }\n\n    return shareUrl;\n  }\n\n  count(url: string) {\n\n    return this.http.jsonp<ICount>(this.prop.countUrl + url, 'callback')\n      .filter(res => !!res.count)\n      .map(res => +res.count)\n      .catch(err => Observable.empty());\n  }\n}\n\n/** LinkedIn count interface */\n\nexport interface ICount {\n  count: number;\n  fCnt: string;\n  fCntPlusOne: string;\n  url: string;\n}\n","/** TUMBLR DOCS: https://www.tumblr.com/docs/en/share_button */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class TumblrButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    if (args.description) {\n      shareUrl += '&caption=' + args.description;\n    }\n\n    if (args.tags) {\n      shareUrl += '&tags=' + args.tags;\n    }\n\n    return shareUrl;\n  }\n\n  count(url: string) {\n\n    return this.http.jsonp<ICount>(this.prop.countUrl + url, 'callback')\n      .filter(res => !!(res.response && res.response.note_count))\n      .map(res => +res.response.note_count)\n      .catch(err => Observable.empty());\n  }\n}\n\n/** Tumblr count interface*/\n\ninterface Meta {\n  status: number;\n  msg: string;\n}\n\ninterface Response {\n  url: string;\n  note_count: number;\n}\n\ninterface ICount {\n  meta: Meta;\n  response: Response;\n}\n","import { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class WhatsappButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl;\n\n    if (args.description) {\n      shareUrl += args.description + ' %0A';\n    }\n\n    return shareUrl + url;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class PinterestButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    /** The description and the image are required to get the pin button to work. */\n\n    if (args.description) {\n      shareUrl += '&description=' + args.description;\n    } else if (document) {\n\n      /** If user didn't add description, get it from the OG meta tag */\n      const ogDescription: Element = document.querySelector('meta[property=\"og:description\"]');\n      if (ogDescription) {\n        shareUrl += '&description=' + ogDescription.getAttribute('content');\n      } else {\n        console.warn('[ShareButtons]: You didn\\'t set the description text for Pinterest button');\n      }\n    }\n\n    if (args.image) {\n      shareUrl += '&media=' + args.image;\n    } else if (document) {\n      const ogImage: Element = document.querySelector('meta[property=\"og:image\"]');\n      if (ogImage) {\n        shareUrl += '&media=' + ogImage.getAttribute('content');\n      } else {\n        console.warn('[ShareButtons]: You didn\\'t set the image URL for Pinterest button');\n      }\n    }\n\n    return shareUrl;\n  }\n\n  count(url: string) {\n\n    return this.http.get(this.prop.countUrl + url, {responseType: 'text'})\n      .map(text => <ICount>JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1')))\n      .filter(res => !!res.count)\n      .map(res => +res.count)\n      .catch(err => Observable.empty());\n  }\n\n}\n\n/** Pinterest count interface */\n\ninterface ICount {\n  url: string;\n  count: number;\n}\n","/** REDDIT DOCS: http://stackoverflow.com/questions/24823114/post-to-reddit-via-url */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class RedditButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    if (args.title) {\n      shareUrl += '&title=' + args.title;\n    }\n\n    return shareUrl;\n  }\n\n  count(url: string) {\n\n    return this.http.get<ICount>(this.prop.countUrl + url)\n      .filter(res => !!(res.data && res.data.children && res.data.children.length))\n      .map(res => +res.data.children[0].data.score)\n      .catch(err => Observable.empty());\n  }\n}\n\n\n/** Reddit count interface */\n\ninterface Source {\n  url: string;\n  width: number;\n  height: number;\n}\n\ninterface Resolution {\n  url: string;\n  width: number;\n  height: number;\n}\n\ninterface Image {\n  source: Source;\n  resolutions: Resolution[];\n  id: string;\n}\n\ninterface Preview {\n  images: Image[];\n  enabled: boolean;\n}\n\ninterface Data2 {\n  domain: string;\n  approved_at_utc?: any;\n  banned_by?: any;\n  thumbnail_width: number;\n  subreddit: string;\n  selftext_html?: any;\n  selftext: string;\n  likes?: any;\n  suggested_sort?: any;\n  user_reports: any[];\n  secure_media?: any;\n  link_flair_text?: any;\n  id: string;\n  banned_at_utc?: any;\n  view_count?: any;\n  archived: boolean;\n  clicked: boolean;\n  report_reasons?: any;\n  title: string;\n  media?: any;\n  mod_reports: any[];\n  can_mod_post: boolean;\n  author_flair_text?: any;\n  score: number;\n  approved_by?: any;\n  over_18: boolean;\n  hidden: boolean;\n  preview: Preview;\n  thumbnail: string;\n  subreddit_id: string;\n  edited: boolean;\n  link_flair_css_class?: any;\n  author_flair_css_class?: any;\n  contest_mode: boolean;\n  gilded: number;\n  downs: number;\n  brand_safe: boolean;\n  saved: boolean;\n  removal_reason?: any;\n  post_hint: string;\n  stickied: boolean;\n  can_gild: boolean;\n  thumbnail_height: number;\n  parent_whitelist_status?: any;\n  name: string;\n  spoiler: boolean;\n  permalink: string;\n  subreddit_type: string;\n  locked: boolean;\n  hide_score: boolean;\n  created: number;\n  url: string;\n  whitelist_status?: any;\n  quarantine: boolean;\n  author: string;\n  created_utc: number;\n  subreddit_name_prefixed: string;\n  ups: number;\n  num_comments: number;\n  is_self: boolean;\n  visited: boolean;\n  num_reports?: any;\n  is_video: boolean;\n  distinguished?: any;\n}\n\ninterface Child {\n  kind: string;\n  data: Data2;\n}\n\ninterface Data {\n  modhash: string;\n  children: Child[];\n  after?: any;\n  before?: any;\n}\n\ninterface ICount {\n  kind: string;\n  data: Data;\n}\n","/** GPLUS DOCS: https://developers.google.com/+/web/share/#sharelink */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport { IShareButton, ShareButtonProp } from '../models/share-buttons.models';\n\nexport class GoogleButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp, private http: HttpClient) {\n  }\n\n  link(url: string) {\n    return this.prop.shareUrl + url;\n  }\n\n  count(url: string) {\n\n    return Observable.empty();\n  }\n}\n","/** STUMBLE DOCS: http://stackoverflow.com/questions/10591424/how-can-i-create-a-custom-stumbleupon-button */\nimport { IShareButton, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class StumbleButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string) {\n\n    return this.prop.shareUrl + url;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n}\n\n","import { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class TelegramButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + url;\n\n    if (args.description) {\n      shareUrl += '&text=' + args.description;\n    }\n\n    return shareUrl;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n}\n","import { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class EmailButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    let shareUrl = this.prop.shareUrl + args.email;\n\n    if (args.title) {\n      shareUrl += '&subject=' + args.title;\n    }\n\n    shareUrl += '&body=';\n    if (args.description) {\n      shareUrl += args.description + ' %0A';\n    }\n\n    return shareUrl + url;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n}\n","import { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { ShareButtonDirective } from '../directives/share-button.directive';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class CopyButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n    this.copyURLToClipboard(url, args.directive);\n    return null;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n  /** copy URL to clipboard */\n  copyURLToClipboard(url: string, directive: ShareButtonDirective) {\n\n    const temp = {text: directive.shareButton.prop.text, icon: directive.shareButton.prop.icon};\n    Observable.of({}).take(1).do(() => {\n        url = decodeURIComponent(url);\n        const textArea = directive.renderer.createElement('textarea');\n\n        // Place in top-left corner of screen regardless of scroll position.\n        directive.renderer.setStyle(textArea, 'position', 'fixed');\n        directive.renderer.setStyle(textArea, 'top', 0);\n        directive.renderer.setStyle(textArea, 'left', 0);\n\n        // Ensure it has a small width and height. Setting to 1px / 1em\n        // doesn't work as directive gives a negative w/h on some browsers.\n        directive.renderer.setStyle(textArea, 'width', '2em');\n        directive.renderer.setStyle(textArea, 'height', '2em');\n\n        // We don't need padding, reducing the size if it does flash render\n        directive.renderer.setStyle(textArea, 'padding', 0);\n\n        // Clean up any borders.\n        directive.renderer.setStyle(textArea, 'border', 'none');\n        directive.renderer.setStyle(textArea, 'outline', 'none');\n        directive.renderer.setStyle(textArea, 'boxShadow', 'none');\n\n        // Avoid flash of white box if rendered for any reason.\n        directive.renderer.setStyle(textArea, 'background', 'transparent');\n        directive.renderer.setProperty(textArea, 'value', url);\n        directive.renderer.appendChild(directive.el, textArea);\n\n        textArea.select();\n\n        document.execCommand('copy');\n\n        directive.renderer.removeChild(directive.el, textArea);\n\n        directive.shareButton.prop.text = this.prop.successText;\n        directive.shareButton.prop.icon = this.prop.successIcon;\n        directive.cd.markForCheck();\n      },\n      () => {\n        directive.shareButton.prop.text = this.prop.failText;\n        directive.shareButton.prop.icon = this.prop.failIcon;\n        directive.cd.markForCheck();\n        console.warn('[ShareButtons]: Print button could not copy URL to clipboard');\n      })\n      .delay(2000)\n      .do(() => {\n        directive.shareButton.prop.text = temp.text;\n        directive.shareButton.prop.icon = temp.icon;\n        directive.cd.markForCheck();\n      })\n      .subscribe();\n\n  }\n\n}\n","import { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class PrintButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n\n    args.directive.window.print();\n    return null;\n  }\n\n  count() {\n\n    return Observable.empty();\n  }\n\n}\n","/** VK DOCS: https://vk.com/dev/widget_share */\n\nimport { IShareButton, ShareButtonArgs, ShareButtonProp } from '../models/share-buttons.models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport class VKontakteButton implements IShareButton {\n\n  constructor(public prop: ShareButtonProp) {\n  }\n\n  link(url: string, args?: ShareButtonArgs) {\n    return this.prop.shareUrl + url;\n  }\n\n  count() {\n    return Observable.empty();\n  }\n\n}\n","export * from './facebook.class';\nexport * from './twitter.class';\nexport * from './linkedin.class';\nexport * from './tumblr.class';\nexport * from './whatsapp.class';\nexport * from './pinterest.class';\nexport * from './reddit.class';\nexport * from './google.class';\nexport * from './stumble.class';\nexport * from './telegram.class';\nexport * from './email.class';\nexport * from './copy.class';\nexport * from './print.class';\nexport * from './vk.class';\n\nexport const Buttons = {\n  facebook: {\n    type: 'facebook',\n    text: 'Facebook',\n    icon: 'fa fa-facebook',\n    color: '#3b5998',\n    supportCount: true,\n    shareUrl: 'https://www.facebook.com/sharer/sharer.php?u=',\n    androidUrl: 'com.facebook.katana',\n    iosUrl: 'fb://',\n    countUrl: 'https://graph.facebook.com?id='\n  },\n  twitter: {\n    type: 'twitter',\n    text: 'Twitter',\n    icon: 'fa fa-twitter',\n    color: '#00acee',\n    supportCount: false,\n    shareUrl: 'https://twitter.com/intent/tweet?url=',\n    androidUrl: 'com.twitter.package',\n    iosUrl: 'twitter://tweet?url='\n  },\n  google: {\n    type: 'google',\n    text: 'Google+',\n    icon: 'fa fa-google-plus',\n    color: '#DB4437',\n    supportCount: false,\n    shareUrl: 'https://plus.google.com/share?url=',\n    androidUrl: '',\n    iosUrl: '',\n  },\n  linkedin: {\n    type: 'linkedin',\n    text: 'LinkedIn',\n    icon: 'fa fa-linkedin',\n    color: '#006fa6',\n    supportCount: true,\n    shareUrl: 'http://www.linkedin.com/shareArticle?url=',\n    androidUrl: 'com.linkedin.android',\n    iosUrl: 'linkedin://',\n    countUrl: 'https://www.linkedin.com/countserv/count/share?url='\n  },\n  pinterest: {\n    type: 'pinterest',\n    text: 'Pinterest',\n    icon: 'fa fa-pinterest-p',\n    color: '#BD091D',\n    supportCount: true,\n    shareUrl: 'https://in.pinterest.com/pin/create/button/?url=',\n    androidUrl: '',\n    iosUrl: '',\n    countUrl: 'https://api.pinterest.com/v1/urls/count.json?callback=receiveCount&url='\n  },\n  reddit: {\n    type: 'reddit',\n    text: 'Reddit',\n    icon: 'fa fa-reddit-alien',\n    color: '#FF4006',\n    supportCount: true,\n    shareUrl: 'http://www.reddit.com/submit?url=',\n    androidUrl: '',\n    iosUrl: '',\n    countUrl: 'https://buttons.reddit.com/button_info.json?url='\n  },\n  tumblr: {\n    type: 'tumblr',\n    text: 'Tumblr',\n    icon: 'fa fa-tumblr',\n    color: '#36465D',\n    supportCount: true,\n    shareUrl: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\n    androidUrl: '',\n    iosUrl: '',\n    countUrl: 'https://api.tumblr.com/v2/share/stats?url='\n  },\n  print: {\n    type: 'print',\n    text: 'Print',\n    icon: 'fa fa-print',\n    color: 'brown',\n    supportCount: false\n  },\n  stumble: {\n    type: 'stumble',\n    text: 'Stumble',\n    icon: 'fa fa-stumbleupon',\n    color: '#eb4924',\n    supportCount: false,\n    shareUrl: 'http://www.stumbleupon.com/submit?url=',\n    androidUrl: '',\n    iosUrl: ''\n  },\n  telegram: {\n    type: 'telegram',\n    text: 'Telegram',\n    icon: 'fa fa-send',\n    color: '#0088cc',\n    supportCount: false,\n    shareUrl: 'https://t.me/share/url?url=',\n    androidUrl: '',\n    iosUrl: ''\n  },\n  vk: {\n    type: 'vk',\n    text: 'VKontakte',\n    icon: 'fa fa-vk',\n    color: '#4C75A3',\n    supportCount: false,\n    shareUrl: 'http://vk.com/share.php?url=',\n    androidUrl: '',\n    iosUrl: ''\n  },\n  copy: {\n    type: 'copy',\n    text: 'Copy link',\n    successText: 'Copied',\n    successIcon: 'fa fa-check',\n    failText: 'Error',\n    failIcon: 'fa fa-exclamation',\n    icon: 'fa fa-link',\n    color: '#607D8B',\n    supportCount: false\n  },\n  whatsapp: {\n    type: 'whatsapp',\n    text: 'WhatsApp',\n    icon: 'fa fa-whatsapp',\n    color: '#25D366',\n    supportCount: false,\n    shareUrl: 'https://web.whatsapp.com/send?text=',\n    androidUrl: 'com.whatsapp.package',\n    iosUrl: 'whatsapp://?text='\n  },\n  email: {\n    type: 'email',\n    text: 'Email',\n    icon: 'fa fa-envelope',\n    color: '#32A1A3',\n    supportCount: false,\n    shareUrl: 'mailto:?'\n  }\n};\n","import { InjectionToken } from '@angular/core';\nimport { ShareButtonsMeta, ShareButtonsOptions } from '../models/share-buttons.models';\n\nexport const OPTIONS = new InjectionToken<ShareButtonsOptions>('OPTIONS');\nexport const BUTTONS_META = new InjectionToken<ShareButtonsMeta>('BUTTONS_META');\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ShareButtonsMeta, ShareButtonsOptions } from '../models/share-buttons.models';\nimport {\n  FacebookButton,\n  TwitterButton,\n  GoogleButton,\n  PinterestButton,\n  TumblrButton,\n  EmailButton,\n  PrintButton,\n  LinkedinButton,\n  VKontakteButton,\n  StumbleButton,\n  RedditButton,\n  WhatsappButton,\n  TelegramButton,\n  CopyButton,\n  Buttons\n} from '../classes';\nimport { BUTTONS_META, OPTIONS } from '../modules/tokens';\n\n@Injectable()\nexport class ShareButtonsService {\n\n  /** All buttons */\n  allButtons = [\n    'facebook',\n    'twitter',\n    'linkedin',\n    'pinterest',\n    'google',\n    'stumble',\n    'reddit',\n    'whatsapp',\n    'tumblr',\n    'vk',\n    'telegram',\n    'email',\n    'copy',\n    'print'\n  ];\n\n  /** Default options */\n  options: ShareButtonsOptions = {\n    theme: 'default',\n    dialogWidth: 500,\n    dialogHeight: 400,\n    include: this.allButtons,\n    exclude: [],\n    size: 0,\n    title: null,\n    image: null,\n    description: null,\n    tags: null,\n    gaTracking: false,\n    twitterAccount: null\n  };\n\n  /** Button's meta data such as icon,color and text of each button */\n  meta: ShareButtonsMeta = Buttons;\n\n  constructor(private http: HttpClient,\n    @Inject(OPTIONS) options: ShareButtonsOptions,\n    @Inject(BUTTONS_META) meta: ShareButtonsMeta) {\n\n    /** Override global options with user's preference */\n    this.options = mergeDeep(this.options, options);\n    this.meta = mergeDeep(this.meta, meta);\n  }\n\n\n  get twitterAccount() {\n    return this.options.twitterAccount;\n  }\n\n  get dialogSize() {\n    return `width=${this.options.dialogWidth}, height=${this.options.dialogHeight}`;\n  }\n\n  /** Get all wanted buttons */\n  get buttons() {\n    if (!this.options.exclude.length) {\n      return this.options.include;\n    }\n    return this.options.include.filter((btn) => this.options.exclude.indexOf(btn) < 0);\n  }\n\n  get theme() {\n    return this.options.theme;\n  }\n\n  /** Global meta tags */\n\n  get title() {\n    return this.options.title;\n  }\n\n  get description() {\n    return this.options.description;\n  }\n\n  get image() {\n    return this.options.image;\n  }\n\n  get tags() {\n    return this.options.tags;\n  }\n\n  get gaTracking() {\n    return this.options.gaTracking;\n  }\n\n  get size() {\n    return this.options.size;\n  }\n\n  createShareButton(buttonName: string) {\n\n    switch (buttonName.toLowerCase()) {\n      case this.meta.facebook.type:\n        return new FacebookButton(this.meta.facebook, this.http);\n      case this.meta.twitter.type:\n        return new TwitterButton(this.meta.twitter);\n      case this.meta.google.type:\n        return new GoogleButton(this.meta.google, this.http);\n      case this.meta.pinterest.type:\n        return new PinterestButton(this.meta.pinterest, this.http);\n      case this.meta.linkedin.type:\n        return new LinkedinButton(this.meta.linkedin, this.http);\n      case this.meta.reddit.type:\n        return new RedditButton(this.meta.reddit, this.http);\n      case this.meta.tumblr.type:\n        return new TumblrButton(this.meta.tumblr, this.http);\n      case this.meta.stumble.type:\n        return new StumbleButton(this.meta.stumble);\n      case this.meta.whatsapp.type:\n        return new WhatsappButton(this.meta.whatsapp);\n      case this.meta.vk.type:\n        return new VKontakteButton(this.meta.vk);\n      case this.meta.telegram.type:\n        return new TelegramButton(this.meta.telegram);\n      case this.meta.email.type:\n        return new EmailButton(this.meta.email);\n      case this.meta.copy.type:\n        return new CopyButton(this.meta.copy);\n      case this.meta.print.type:\n        return new PrintButton(this.meta.print);\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Determine the mobile operating system.\n   * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.\n   */\n  getMobileOS() {\n    // const userAgent = navigator.userAgent || navigator.vendor || (window || global).opera;\n\n    // Windows Phone must come first because its UA also contains \"Android\"\n    // if (/windows phone/i.test(userAgent)) {\n    //   return 'WindowsPhone';\n    // }\n\n    // if (/android/i.test(userAgent)) {\n    //   return 'Android';\n    // }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    // if (/iPad|iPhone|iPod/.test(userAgent) && !(window || global).MSStream) {\n    //   return 'iOS';\n    // }\n\n    return undefined;\n  }\n\n}\n\n/**\n * Simple object check.\n */\nfunction isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n */\nfunction mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} });\n        }\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n","import { Injectable } from '@angular/core';\n\ndeclare const global: any;\ndeclare const window: any;\n\n@Injectable()\nexport class UniversalSupportService {\n\n    get nativeWindow() {\n        try {\n            return window;\n        } catch (e) {\n          return global;\n        }\n    }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  ElementRef,\n  Renderer2,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ShareButtonsService } from '../services/share-buttons.service';\nimport { IShareButton } from '../models/share-buttons.models';\nimport { UniversalSupportService } from '../services/universal-support.service';\n\n/** Google analytics ref */\ndeclare const ga: Function;\n\n@Directive({\n  selector: '[shareButton]'\n})\nexport class ShareButtonDirective {\n\n  /** Window ref that supports Universal */\n  window: Window;\n\n  /** Element ref */\n  el: HTMLElement;\n\n  /** Share button type */\n  shareButton: IShareButton;\n\n  /** Validated share URL */\n  url: string;\n\n  /** Share meta tags */\n  @Input() sbTitle = this.share.title;\n  @Input() sbDescription = this.share.description;\n  @Input() sbImage = this.share.image;\n  @Input() sbTags = this.share.tags;\n\n  /** Set button class, e.g. 'sb-facebook' */\n  buttonClass: string;\n\n  /** Set share button e.g facebook, twitter...etc  */\n  @Input('shareButton')\n  set createButton(buttonName: string) {\n\n    /** Create a new button of type <buttonName> */\n    const button = this.share.createShareButton(buttonName);\n\n    if (button) {\n      this.shareButton = button;\n\n      /** Remove old button class in case user changed the button */\n      this.renderer.removeClass(this.el, 'sb-' + this.buttonClass);\n\n      /** Add new button class e.g.: sb-facebook, sb-twitter ...etc */\n      this.renderer.addClass(this.el, 'sb-' + button.prop.type);\n\n      /** Keep a copy of current class */\n      this.buttonClass = button.prop.type;\n\n      /** Get link's shared count */\n      this.getCount();\n    } else {\n      throw new Error(`[ShareButtons]: The share button \"${buttonName}\" does not exist. Make sure the button name is correct!`);\n    }\n  }\n\n  /** Set share URL */\n  @Input()\n  set sbUrl(url: string) {\n\n    /** Check if current URL equals previous URL */\n    if (url !== this.url) {\n      this.url = this.validateUrl(url);\n      this.getCount();\n    }\n  }\n\n  /** Google analytics tracking*/\n  @Input() gaTracking = this.share.gaTracking;\n\n  /** Share count event */\n  @Output() sbCount = new EventEmitter<number>();\n\n  /** Share dialog opened event */\n  @Output() sbOpened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() sbClosed = new EventEmitter<string>();\n\n  constructor(private share: ShareButtonsService,\n    public renderer: Renderer2,\n    public cd: ChangeDetectorRef,\n    el: ElementRef,\n    universal: UniversalSupportService) {\n    this.el = el.nativeElement;\n    this.window = universal.nativeWindow;\n  }\n\n  /** Open share dialog */\n  @HostListener('click')\n  onClick() {\n    /** Set user did not set the url using [sbUrl], use window URL */\n    if (!this.url) {\n      this.url = encodeURIComponent(this.window.location.href);\n    }\n\n    /** Get sharing link */\n    const shareUrl = this.shareButton.link(this.url, {\n      title: this.sbTitle,\n      description: this.sbDescription,\n      image: this.sbImage,\n      tags: this.sbTags,\n      mobile: this.share.getMobileOS(),\n      via: this.share.twitterAccount,\n      directive: this\n    });\n\n    /** GA tracking */\n    if (this.gaTracking && typeof ga !== 'undefined') {\n      ga('send', 'social', this.shareButton.prop.type, 'click', this.url);\n    }\n\n    let popUp;\n    if (shareUrl) {\n      /** Open share dialog */\n      popUp = this.window.open(shareUrl, 'newwindow', this.share.dialogSize);\n    }\n\n    /** Emit opened dialog type */\n    this.sbOpened.emit(this.shareButton.prop.type);\n\n    /** If dialog closed event has subscribers, emit closed dialog type */\n    if (this.sbClosed.observers.length && popUp) {\n      const pollTimer = this.window.setInterval(() => {\n        if (popUp.closed) {\n          this.window.clearInterval(pollTimer);\n          this.sbClosed.emit(this.shareButton.prop.type);\n        }\n      }, 200);\n    }\n\n  }\n\n  getCount() {\n    /** Only if share count has observers & the button has support for share count */\n    if (this.url && this.sbCount.observers.length && this.shareButton.prop.supportCount) {\n\n      /** Emit share count to (sbCount) Output */\n      this.shareButton.count(this.url).subscribe((count: number) => this.sbCount.emit(count));\n    }\n  }\n\n  validateUrl(url: string) {\n    /** Use encodeURIComponent to let URLs with the hash location strategy to work in tweets */\n\n    if (url) {\n      const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n      if (r.test(url)) {\n        return encodeURIComponent(url);\n      }\n      console.warn(`[ShareButtons]: The share URL \"${url}\" is invalid!`);\n    }\n    /** fallback to current page URL */\n    return encodeURIComponent(this.window.location.href);\n  }\n\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nFormatter'\n})\nexport class NFormatterPipe implements PipeTransform {\n\n  transform(num: any, digits?: any): any {\n\n    if (typeof num !== 'number') {\n      num = 1;\n    }\n\n    return nFormatter(num, digits);\n  }\n\n}\n\n/** Change share counts to a readable number e.g 35.6k */\nexport const nFormatter = (num: number, digits: number) => {\n\n  const si = [\n    {value: 1E18, symbol: 'E'},\n    {value: 1E15, symbol: 'P'},\n    {value: 1E12, symbol: 'T'},\n    {value: 1E9, symbol: 'G'},\n    {value: 1E6, symbol: 'M'},\n    {value: 1E3, symbol: 'K'}\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n\n  for (let i = 0; i < si.length; i++) {\n    if (num >= si[i].value) {\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\n    }\n  }\n  return num.toFixed(digits).replace(rx, '$1');\n};\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport { ShareButtonsService } from '../services/share-buttons.service';\nimport { ShareButtonDirective } from '../directives/share-button.directive';\nimport { NFormatterPipe } from '../pipes/n-formatter.pipe';\nimport { ShareButtonsMeta, ShareButtonsOptions } from '../models/share-buttons.models';\nimport { UniversalSupportService } from '../services/universal-support.service';\nimport { OPTIONS, BUTTONS_META } from './tokens';\n\nexport function ShareButtonsFactory(httpClient: HttpClient, options: ShareButtonsOptions, buttonsMeta: ShareButtonsMeta) {\n  return new ShareButtonsService(httpClient, options, buttonsMeta);\n}\n\n@NgModule({\n  declarations: [\n    ShareButtonDirective,\n    NFormatterPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    ShareButtonDirective,\n    NFormatterPipe\n  ],\n  providers: [ UniversalSupportService ]\n})\nexport class ShareDirectiveModule {\n  static forRoot(options?: ShareButtonsOptions, buttonsMeta?: ShareButtonsMeta) {\n    return {\n      ngModule: ShareDirectiveModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {provide: BUTTONS_META, useValue: buttonsMeta},\n        {\n          provide: ShareButtonsService,\n          useFactory: ShareButtonsFactory,\n          deps: [HttpClient, OPTIONS, BUTTONS_META]\n        }\n      ]\n    };\n  }\n}\n\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ViewChild,\n  ChangeDetectorRef,\n  ElementRef,\n  HostBinding\n} from '@angular/core';\n\nimport { ShareButtonDirective } from '../../directives/share-button.directive';\nimport { ShareButtonsService } from '../../services/share-buttons.service';\n\n@Component({\n  selector: 'share-button',\n  template: `\n    <button class=\"sb-wrapper\"\n            [shareButton]=\"button\"\n            [sbUrl]=\"url\"\n            [sbImage]=\"image\"\n            [sbTitle]=\"title\"\n            [sbDescription]=\"description\"\n            [sbTags]=\"tags\"\n            (sbOpened)=\"opened.emit($event)\"\n            (sbClosed)=\"closed.emit($event)\"\n            [class.sb-show-count]=\"showCount && shareCount\"\n            [class.sb-show-template]=\"template.innerText?.length\"\n            [class.sb-show-text]=\"showName && !template.childElementCount\"\n            [class.sb-show-icon]=\"showIcon && !template.childElementCount\"\n            [style.fontSize.px]=\"(1 + size/20) * 14\">\n\n      <div class=\"sb-inner\">\n\n        <!-- HIDE BUTTON'S ICON AND TEXT IF CUSTOM TEMPLATE IS USED -->\n\n        <div class=\"sb-content\" *ngIf=\"!template.childElementCount\">\n\n          <!-- BUTTON ICON -->\n          <div *ngIf=\"showIcon\" class=\"sb-icon\">\n            <i [class]=\"shareDirective.shareButton.prop.icon\" aria-hidden=\"true\"></i>\n          </div>\n\n          <!-- BUTTON TEXT -->\n          <div *ngIf=\"showName\" class=\"sb-text\">\n            {{ shareDirective.shareButton.prop.text }}\n          </div>\n\n        </div>\n\n        <!-- FOR CUSTOM TEMPLATE -->\n        <div #template class=\"sb-template\">\n          <ng-content></ng-content>\n        </div>\n\n        <!-- BUTTON COUNT -->\n        <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\n          <span>{{ shareCount | nFormatter }}</span>\n        </div>\n\n      </div>\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButtonComponent implements OnDestroy {\n\n  /** Share URL */\n  url: string;\n\n  /** Share count value */\n  shareCount: number;\n\n  /** Button name e.g. fb, twitter, reddit...etc */\n  button: string;\n\n  @Input('button')\n  set createButton(button: string) {\n    this.shareCount = 0;\n    this.button = button;\n  }\n\n  /** on set share URL */\n  @Input('url')\n  set setUrl(newUrl: string) {\n    /** Reset share count when url changes */\n    this.shareCount = 0;\n    this.url = newUrl;\n  }\n\n  /** Share meta tags */\n  @Input() title: string;\n  @Input() description: string;\n  @Input() image: string;\n  @Input() tags: string;\n\n  /** Show button icon */\n  @Input() showIcon = true;\n\n  /** Show button name */\n  @Input() showName = false;\n\n  /** Button size */\n  @Input() size = this.share.size;\n\n  /** Get and display share count */\n  showCount = false;\n\n  @Input('showCount')\n  set setShowCount(show: boolean) {\n    this.showCount = show;\n    /** Subscribe to count event */\n\n    /** Check if sbCount has observers already, don't subscribe again */\n    if (!this.shareDirective.sbCount.observers.length) {\n\n      /** Subscribe to the directive count's event only if 'show' is true or 'sbCount' has observers */\n      if (this.showCount || this.count.observers.length) {\n        this.shareDirective.sbCount.subscribe(count => {\n          this.shareCount = count;\n          this.count.emit(count);\n          this.cd.markForCheck();\n        });\n      }\n\n    }\n\n  }\n\n  /** Button theme */\n  @Input('theme')\n  set setTheme(theme: string) {\n    this.buttonClass = 'sb-button sb-' + theme;\n  }\n\n  /** Set theme as button class */\n  @HostBinding('class') buttonClass = 'sb-button sb-' + this.share.theme;\n\n  /** Share count event */\n  @Output() count = new EventEmitter<number>();\n\n  /** Share dialog opened event */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() closed = new EventEmitter<string>();\n\n  /** Share directive ref */\n  @ViewChild(ShareButtonDirective)\n  shareDirective: ShareButtonDirective;\n\n  /** <ng-content> wrapper, used to add class e.g. sb-default, sb-text, sb-count */\n  @ViewChild('template')\n  template: ElementRef;\n\n  constructor(private cd: ChangeDetectorRef, private share: ShareButtonsService) {\n  }\n\n  ngOnDestroy() {\n    this.shareDirective.sbCount.complete();\n  }\n\n}\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ShareDirectiveModule } from './share-directive.module';\n\nimport { ShareButtonsService } from '../services/share-buttons.service';\nimport { ShareButtonComponent } from '../components/share-button/share-button.component';\nimport { ShareButtonsMeta, ShareButtonsOptions } from '../models/share-buttons.models';\nimport { OPTIONS, BUTTONS_META } from './tokens';\n\nexport function ShareButtonsFactory(httpClient: HttpClient, options: ShareButtonsOptions, buttonsMeta: ShareButtonsMeta) {\n  return new ShareButtonsService(httpClient, options, buttonsMeta);\n}\n\n@NgModule({\n  declarations: [\n    ShareButtonComponent\n  ],\n  imports: [\n    ShareDirectiveModule\n  ],\n  exports: [\n    ShareDirectiveModule,\n    ShareButtonComponent\n  ]\n})\nexport class ShareButtonModule {\n  static forRoot(options?: ShareButtonsOptions, buttonsMeta?: ShareButtonsMeta) {\n    return {\n      ngModule: ShareButtonModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {provide: BUTTONS_META, useValue: buttonsMeta},\n        {\n          provide: ShareButtonsService,\n          useFactory: ShareButtonsFactory,\n          deps: [HttpClient, OPTIONS, BUTTONS_META]\n        }\n      ]\n    };\n  }\n}\n\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ChangeDetectorRef,\n  QueryList,\n  ViewChildren,\n  OnInit,\n  HostBinding\n} from '@angular/core';\nimport { ShareButtonsService } from '../../services/share-buttons.service';\nimport { ShareButtonComponent } from '../share-button/share-button.component';\n\n@Component({\n  selector: 'share-buttons',\n  template: `\n    <share-button *ngFor=\"let button of buttons | slice: 0:shownButtons\" \n      [button]=\"button\" \n      [theme]=\"theme\"\n      [url]=\"url\"\n      [title]=\"title\"\n      [description]=\"description\" \n      [image]=\"image\" \n      [tags]=\"tags\" \n      [showCount]=\"showCount\" \n      [showIcon]=\"showIcon\" \n      [showName]=\"showName\"\n      [size]=\"size\" \n      (opened)=\"opened.emit($event)\" \n      (closed)=\"closed.emit($event)\"></share-button>\n\n    <div [class]=\"'sb-button sb-' + theme\" \n      [style.fontSize.px]=\"(1 + size/20) * 14\">\n\n      <!-- SHOW LESS BUTTON -->\n\n      <button *ngIf=\"showAll && shownButtons === buttons.length\" \n              class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"less()\">\n\n        <div class=\"sb-inner\">\n          <div class=\"sb-content\">\n            <div class=\"sb-icon\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></div>\n          </div>\n        </div>\n      </button>\n\n      <!-- SHOW MORE BUTTON -->\n\n        <button *ngIf=\"!showAll && shownButtons < buttons.length\"\n                class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"more()\">\n      \n          <div class=\"sb-inner\">\n            <div class=\"sb-content\">\n              <div class=\"sb-icon\"><i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i></div>\n            </div>\n          </div>\n        </button>\n\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButtonsComponent implements OnInit, OnDestroy {\n\n  /** Share URL */\n  url: string;\n\n  /** Share count value */\n  shareCount: number;\n\n  /** Share Buttons array */\n  buttons: string[] = [];\n\n  /** Buttons to include */\n  includeButtons: string[] = this.share.buttons;\n\n  /** Buttons to exclude */\n  excludeButtons: string[] = [];\n\n  @Input('include')\n  set include(includeButtons: string[]) {\n    this.includeButtons = includeButtons;\n    this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\n  }\n\n  @Input('exclude')\n  set exclude(excludeButtons: string[]) {\n    this.excludeButtons = excludeButtons;\n    this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\n  }\n\n  /** Number of shown buttons */\n  shownButtons = this.includeButtons.length;\n  /** Number of included buttons */\n  totalButtons;\n  /** Disable more/less buttons */\n  showAll = false;\n\n  @Input('show')\n  set setShownButtons(shownCount: number) {\n    this.shownButtons = shownCount;\n    this.totalButtons = this.buttons.length;\n    /** Set showAll to true if shown buttons count = selected buttons count */\n    this.showAll = this.shownButtons === this.totalButtons + 1;\n  }\n\n  /** Set share URL */\n  @Input('url')\n  set setUrl(newUrl: string) {\n    /** Reset share count on url changes */\n    this.shareCount = 0;\n    this.url = newUrl;\n  }\n\n  /** Share meta tags */\n  @Input() title: string;\n  @Input() description: string;\n  @Input() image: string;\n  @Input() tags: string;\n\n  /** Show button icon */\n  @Input() showIcon = true;\n\n  /** Show button name */\n  @Input() showName = false;\n\n  /** Button size */\n  @Input() size: number;\n\n  /** Get and display share count */\n  showCount = false;\n\n  @Input('showCount')\n  set setShowCount(show: boolean) {\n    this.showCount = show;\n\n    if (this.shareComponents) {\n      /** Subscribe to count event */\n      this.shareComponents.forEach((shareComponent: ShareButtonComponent) => {\n\n        /** Check if sbCount has observers already, don't subscribe again */\n        if (!shareComponent.count.observers.length) {\n\n          /** Subscribe to the component count event (only if [showCount]=true) */\n          if (show || this.count.observers.length) {\n            shareComponent.count.subscribe(count => {\n              this.shareCount = count;\n              this.count.emit(count);\n              this.cd.markForCheck();\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /** Buttons theme */\n  theme;\n\n  @Input('theme')\n  set setTheme(theme: string) {\n    /** Set buttons' theme to override the default theme */\n    this.theme = theme;\n    /** Set buttons' container theme */\n    this.containerClass = 'sb-group sb-' + theme;\n  }\n\n  /** Set theme as buttons' container class */\n  @HostBinding('class') containerClass = 'sb-group sb-' + this.share.theme;\n\n  /** Share count event */\n  @Output() count = new EventEmitter<number>();\n\n  /** Share dialog opened event */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() closed = new EventEmitter<string>();\n\n  /** Share components ref */\n  @ViewChildren(ShareButtonComponent) shareComponents: QueryList<ShareButtonComponent>;\n\n  constructor(private cd: ChangeDetectorRef, public share: ShareButtonsService) {\n\n  }\n\n  ngOnInit() {\n    /**  if use didn't select the buttons use all */\n    if (!this.excludeButtons.length) {\n      this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\n    }\n  }\n\n  ngOnDestroy() {\n    this.shareComponents.forEach((shareComponent: ShareButtonComponent) => {\n      shareComponent.count.unsubscribe();\n    });\n  }\n\n  more() {\n    this.totalButtons = this.shownButtons;\n    this.shownButtons = this.buttons.length;\n    this.showAll = true;\n  }\n\n  less() {\n    this.shownButtons = this.totalButtons;\n    this.showAll = false;\n  }\n\n}\n","import { NgModule, InjectionToken } from '@angular/core';\n\nimport { ShareButtonModule } from './share-button.module';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ShareButtonsService } from '../services/share-buttons.service';\nimport { ShareButtonsComponent } from '../components/share-buttons/share-buttons.component';\nimport { ShareButtonsMeta, ShareButtonsOptions } from '../models/share-buttons.models';\nimport { OPTIONS, BUTTONS_META } from './tokens';\n\nexport function ShareButtonsFactory(httpClient: HttpClient, options: ShareButtonsOptions, buttonsMeta: ShareButtonsMeta) {\n  return new ShareButtonsService(httpClient, options, buttonsMeta);\n}\n\n@NgModule({\n  declarations: [\n    ShareButtonsComponent\n  ],\n  imports: [\n    ShareButtonModule\n  ],\n  exports: [\n    ShareButtonModule,\n    ShareButtonsComponent\n  ]\n})\nexport class ShareButtonsModule {\n  static forRoot(options?: ShareButtonsOptions, buttonsMeta?: ShareButtonsMeta) {\n    return {\n      ngModule: ShareButtonsModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {provide: BUTTONS_META, useValue: buttonsMeta},\n        {\n          provide: ShareButtonsService,\n          useFactory: ShareButtonsFactory,\n          deps: [HttpClient, OPTIONS, BUTTONS_META]\n        }\n      ]\n    };\n  }\n}\n\n"],"names":["http","Observable","InjectionToken","Injectable","HttpClient","Inject","EventEmitter","Directive","Renderer2","ChangeDetectorRef","ElementRef","Input","Output","HostListener","Pipe","ShareButtonsFactory","NgModule","CommonModule","Component","ChangeDetectionStrategy","HostBinding","ViewChild","ViewChildren"],"mappings":";;;;;;;;;;AACA,AAOA,IAAA;IAEE,wBAAmB,IAAqB,EAAUA,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;IAED,6BAAI;;;;IAAJ,UAAK,GAAW;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACjC;;;;;IAED,8BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACnD,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,EAAE,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,GAAA,CAAC;aACrD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,GAAA,CAAC;aAClC,KAAK,CAAC,UAAA,GAAG,IAAI,OAAAC,qBAAU,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACrC;yBAxBH;IAyBC;;;;;;ACvBD,AAKA,IAAA;IAEE,uBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,4BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAExC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;SAChC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;SACtC;QAED,OAAO,QAAQ,CAAC;KACjB;;;;IAED,6BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;wBAlCH;IAoCC;;;;;;ACjCD,AAOA,IAAA;IAEE,wBAAmB,IAAqB,EAAUD,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;;IAED,6BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAExC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SACpC;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;QAED,OAAO,QAAQ,CAAC;KACjB;;;;;IAED,8BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,UAAU,CAAC;aACjE,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,GAAA,CAAC;aAC1B,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,KAAK,GAAA,CAAC;aACtB,KAAK,CAAC,UAAA,GAAG,IAAI,OAAAC,qBAAU,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACrC;yBAnCH;IAoCC,CAAA;AA1BD;;;;;;;;;ACPA,AAOA,IAAA;IAEE,sBAAmB,IAAqB,EAAUD,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;;IAED,2BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAExC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;SAClC;QAED,OAAO,QAAQ,CAAC;KACjB;;;;;IAED,4BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,UAAU,CAAC;aACjE,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,EAAE,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAA,CAAC;aAC1D,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAA,CAAC;aACpC,KAAK,CAAC,UAAA,GAAG,IAAI,OAAAC,qBAAU,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACrC;uBApCH;IAqCC;;;;;;ACpCD,AAKA,IAAA;IAEE,wBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,6BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAElC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SACvC;QAED,OAAO,QAAQ,GAAG,GAAG,CAAC;KACvB;;;;IAED,8BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;yBAzBH;IA2BC;;;;;;AC1BD,AAOA,IAAA;IAEE,yBAAmB,IAAqB,EAAUD,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;;IAED,8BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;;QAIxC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;SAChD;aAAM,IAAI,QAAQ,EAAE;;;;YAGnB,qBAAM,aAAa,GAAY,QAAQ,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAC;YACzF,IAAI,aAAa,EAAE;gBACjB,QAAQ,IAAI,eAAe,GAAG,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACrE;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;aAC3F;SACF;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SACpC;aAAM,IAAI,QAAQ,EAAE;YACnB,qBAAM,OAAO,GAAY,QAAQ,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;YAC7E,IAAI,OAAO,EAAE;gBACX,QAAQ,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACzD;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;aACpF;SACF;QAED,OAAO,QAAQ,CAAC;KACjB;;;;;IAED,+BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;aACnE,GAAG,CAAC,UAAA,IAAI,6BAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,IAAA,CAAC;aAC5E,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,GAAA,CAAC;aAC1B,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,KAAK,GAAA,CAAC;aACtB,KAAK,CAAC,UAAA,GAAG,IAAI,OAAAC,qBAAU,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACrC;0BArDH;IAuDC;;;;;;ACpDD,AAOA,IAAA;IAEE,sBAAmB,IAAqB,EAAUD,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;;IAED,2BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAExC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SACpC;QAED,OAAO,QAAQ,CAAC;KACjB;;;;;IAED,4BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACnD,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAA,CAAC;aAC5E,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAA,CAAC;aAC5C,KAAK,CAAC,UAAA,GAAG,IAAI,OAAAC,qBAAU,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACrC;uBAhCH;IAiCC;;;;;;AC9BD,AAIA,IAAA;IAEE,sBAAmB,IAAqB,EAAUD,OAAgB;QAA/C,SAAI,GAAJ,IAAI,CAAiB;QAAU,SAAI,GAAJA,OAAI,CAAY;KACjE;;;;;IAED,2BAAI;;;;IAAJ,UAAK,GAAW;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACjC;;;;;IAED,4BAAK;;;;IAAL,UAAM,GAAW;QAEf,OAAOC,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;uBAnBH;IAoBC;;;;;;AClBD,AAKA,IAAA;IAEE,uBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;IAED,4BAAI;;;;IAAJ,UAAK,GAAW;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACjC;;;;IAED,6BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;wBApBH;IAqBC;;;;;;ACpBD,AAKA,IAAA;IAEE,wBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,6BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAExC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;SACzC;QAED,OAAO,QAAQ,CAAC;KACjB;;;;IAED,8BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;yBAzBH;IA2BC;;;;;;AC1BD,AAMA,IAAA;IAEE,qBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,0BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,qBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAE/C,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;SACtC;QAED,QAAQ,IAAI,QAAQ,CAAC;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,QAAQ,IAAI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SACvC;QAED,OAAO,QAAQ,GAAG,GAAG,CAAC;KACvB;;;;IAED,2BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;sBA/BH;IAiCC;;;;;;AC/BD,AASA,IAAA;IAEE,oBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,yBAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QACtC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;KACb;;;;IAED,0BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;;;;;;;;IAGD,uCAAkB;;;;;;IAAlB,UAAmB,GAAW,EAAE,SAA+B;QAA/D,iBAsDC;QApDC,qBAAM,IAAI,GAAG,EAAC,IAAI,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC;QAC5FA,qBAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzB,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC9B,qBAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;;YAG9D,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;YAC3D,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAChD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;;;YAIjD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YACtD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;;YAGvD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;;YAGpD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACxD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACzD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;;YAG3D,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;YACnE,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;YACvD,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAEvD,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAE7B,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAEvD,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACxD,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACxD,SAAS,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SAC7B,EACD;YACE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACrD,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACrD,SAAS,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;YAC5B,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;SAC9E,CAAC;aACD,KAAK,CAAC,IAAI,CAAC;aACX,EAAE,CAAC;YACF,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5C,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5C,SAAS,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SAC7B,CAAC;aACD,SAAS,EAAE,CAAC;KAEhB;qBAjFH;IAmFC;;;;;;AClFD,AAKA,IAAA;IAEE,qBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,0BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QAEtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;KACb;;;;IAED,2BAAK;;;IAAL;QAEE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;sBApBH;IAsBC;;;;;;ACnBD,AAKA,IAAA;IAEE,yBAAmB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;KACvC;;;;;;IAED,8BAAI;;;;;IAAJ,UAAK,GAAW,EAAE,IAAsB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACjC;;;;IAED,+BAAK;;;IAAL;QACE,OAAOA,qBAAU,CAAC,KAAK,EAAE,CAAC;KAC3B;0BAnBH;IAqBC;;;;;;ACrBD,AAeO,IAAM,OAAO,GAAG;IACrB,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,+CAA+C;QACzD,UAAU,EAAE,qBAAqB;QACjC,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,gCAAgC;KAC3C;IACD,OAAO,EAAE;QACP,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,eAAe;QACrB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,uCAAuC;QACjD,UAAU,EAAE,qBAAqB;QACjC,MAAM,EAAE,sBAAsB;KAC/B;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,mBAAmB;QACzB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,oCAAoC;QAC9C,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;KACX;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,2CAA2C;QACrD,UAAU,EAAE,sBAAsB;QAClC,MAAM,EAAE,aAAa;QACrB,QAAQ,EAAE,qDAAqD;KAChE;IACD,SAAS,EAAE;QACT,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,mBAAmB;QACzB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,kDAAkD;QAC5D,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,yEAAyE;KACpF;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,oBAAoB;QAC1B,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,mCAAmC;QAC7C,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,kDAAkD;KAC7D;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,oDAAoD;QAC9D,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,4CAA4C;KACvD;IACD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,OAAO;QACd,YAAY,EAAE,KAAK;KACpB;IACD,OAAO,EAAE;QACP,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,mBAAmB;QACzB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,wCAAwC;QAClD,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;KACX;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,YAAY;QAClB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,6BAA6B;QACvC,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;KACX;IACD,EAAE,EAAE;QACF,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,8BAA8B;QACxC,UAAU,EAAE,EAAE;QACd,MAAM,EAAE,EAAE;KACX;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE,QAAQ;QACrB,WAAW,EAAE,aAAa;QAC1B,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,mBAAmB;QAC7B,IAAI,EAAE,YAAY;QAClB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;KACpB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,qCAAqC;QAC/C,UAAU,EAAE,sBAAsB;QAClC,MAAM,EAAE,mBAAmB;KAC5B;IACD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,UAAU;KACrB;CACF;;;;;;AC7JD,AAGO,IAAM,OAAO,GAAG,IAAIC,mBAAc,CAAsB,SAAS,CAAC,CAAC;AAC1E,AAAO,IAAM,YAAY,GAAG,IAAIA,mBAAc,CAAmB,cAAc,CAAC;;;;;;ACJhF;IA8DE,6BAAoBF,OAAgB,EACjB,SACK;QAFJ,SAAI,GAAJA,OAAI,CAAY;;;;0BApCvB;YACX,UAAU;YACV,SAAS;YACT,UAAU;YACV,WAAW;YACX,QAAQ;YACR,SAAS;YACT,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,IAAI;YACJ,UAAU;YACV,OAAO;YACP,MAAM;YACN,OAAO;SACR;;;;uBAG8B;YAC7B,KAAK,EAAE,SAAS;YAChB,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,IAAI;YACjB,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,KAAK;YACjB,cAAc,EAAE,IAAI;SACrB;;;;oBAGwB,OAAO;;QAO9B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxC;IAGD,sBAAI,+CAAc;;;;QAAlB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;SACpC;;;OAAA;IAED,sBAAI,2CAAU;;;;QAAd;YACE,OAAO,WAAS,IAAI,CAAC,OAAO,CAAC,WAAW,iBAAY,IAAI,CAAC,OAAO,CAAC,YAAc,CAAC;SACjF;;;OAAA;IAGD,sBAAI,wCAAO;;;;;;QAAX;YAAA,iBAKC;YAJC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE;gBAChC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SACpF;;;OAAA;IAED,sBAAI,sCAAK;;;;QAAT;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAC3B;;;OAAA;IAID,sBAAI,sCAAK;;;;;;QAAT;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAC3B;;;OAAA;IAED,sBAAI,4CAAW;;;;QAAf;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;SACjC;;;OAAA;IAED,sBAAI,sCAAK;;;;QAAT;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAC3B;;;OAAA;IAED,sBAAI,qCAAI;;;;QAAR;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SAC1B;;;OAAA;IAED,sBAAI,2CAAU;;;;QAAd;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SAChC;;;OAAA;IAED,sBAAI,qCAAI;;;;QAAR;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SAC1B;;;OAAA;;;;;IAED,+CAAiB;;;;IAAjB,UAAkB,UAAkB;QAElC,QAAQ,UAAU,CAAC,WAAW,EAAE;YAC9B,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC1B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3D,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;gBACzB,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;gBACxB,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;gBAC3B,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC1B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3D,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;gBACxB,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;gBACxB,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;gBACzB,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC1B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;gBACpB,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC1B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;gBACvB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1C,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBACtB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;gBACvB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1C;gBACE,OAAO,IAAI,CAAC;SACf;KACF;;;;;;;;;;IAMD,yCAAW;;;;;IAAX;;;;;;;;;;;;;QAiBE,OAAO,SAAS,CAAC;KAClB;;gBA1JFG,eAAU;;;;gBArBFC,eAAU;gDA8DdC,WAAM,SAAC,OAAO;gDACdA,WAAM,SAAC,YAAY;;8BAhExB;;;;;;;AAuLA,kBAAkB,IAAI;IACpB,QAAQ,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;CACnE;;;;;;;AAKD,mBAAmB,MAAM;IAAE,iBAAU;SAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;QAAV,gCAAU;;IACnC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACnB,OAAO,MAAM,CAAC;KACf;IACD,qBAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IAE/B,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACxC,KAAK,qBAAM,GAAG,IAAI,MAAM,EAAE;YACxB,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;gBACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oBAChB,MAAM,CAAC,MAAM,CAAC,MAAM,YAAI,GAAC,GAAG,IAAG,EAAE,MAAG,CAAC;iBACtC;gBACD,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,MAAM,CAAC,MAAM,CAAC,MAAM,YAAI,GAAC,GAAG,IAAG,MAAM,CAAC,GAAG,CAAC,MAAG,CAAC;aAC/C;SACF;KACF;IAED,OAAO,SAAS,gBAAC,MAAM,SAAK,OAAO,GAAE;;CACtC;;;;;;AClND;;;IAQI,sBAAI,iDAAY;;;;QAAhB;YACI,IAAI;gBACA,OAAO,MAAM,CAAC;aACjB;YAAC,wBAAO,CAAC,EAAE;gBACV,OAAO,MAAM,CAAC;aACf;SACJ;;;OAAA;;gBATJF,eAAU;;;;kCALX;;;;;;;ACAA;IA4FE,8BAAoB,KAA0B,EACrC,UACA,IACP,EAAc,EACd,SAAkC;QAJhB,UAAK,GAAL,KAAK,CAAqB;QACrC,aAAQ,GAAR,QAAQ;QACR,OAAE,GAAF,EAAE;;;;uBA3DQ,IAAI,CAAC,KAAK,CAAC,KAAK;6BACV,IAAI,CAAC,KAAK,CAAC,WAAW;uBAC5B,IAAI,CAAC,KAAK,CAAC,KAAK;sBACjB,IAAI,CAAC,KAAK,CAAC,IAAI;;;;0BA2CX,IAAI,CAAC,KAAK,CAAC,UAAU;;;;uBAGvB,IAAIG,iBAAY,EAAU;;;;wBAGzB,IAAIA,iBAAY,EAAU;;;;wBAG1B,IAAIA,iBAAY,EAAU;QAO7C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC;KACtC;0BAtDG,8CAAY;;;;;;kBAAC,UAAkB;;;;YAGjC,qBAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAExD,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;;gBAG1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;;gBAG7D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;gBAG1D,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;;gBAGpC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,wCAAqC,UAAU,6DAAyD,CAAC,CAAC;aAC3H;;;;;0BAKC,uCAAK;;;;;;kBAAC,GAAW;;YAGnB,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;gBACpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;;;;;;;;;IA0BH,sCAAO;;;;;;;QAEL,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC1D;;;;QAGD,qBAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/C,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,IAAI,EAAE,IAAI,CAAC,MAAM;YACjB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YAChC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;YAC9B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;;QAGH,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE,KAAK,WAAW,EAAE;YAChD,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACrE;QAED,qBAAI,KAAK,CAAC;QACV,IAAI,QAAQ,EAAE;;YAEZ,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACxE;;QAGD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAG/C,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,IAAI,KAAK,EAAE;YAC3C,qBAAM,WAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;gBACxC,IAAI,KAAK,CAAC,MAAM,EAAE;oBAChB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAS,CAAC,CAAC;oBACrC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAChD;aACF,EAAE,GAAG,CAAC,CAAC;SACT;;;;;IAIH,uCAAQ;;;IAAR;QAAA,iBAOC;;QALC,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE;;YAGnF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;SACzF;KACF;;;;;IAED,0CAAW;;;;IAAX,UAAY,GAAW;;QAGrB,IAAI,GAAG,EAAE;YACP,qBAAM,CAAC,GAAG,+EAA+E,CAAC;YAE1F,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACf,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAChC;YACD,OAAO,CAAC,IAAI,CAAC,qCAAkC,GAAG,mBAAe,CAAC,CAAC;SACpE;;QAED,OAAO,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACtD;;gBAvJFC,cAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;iBAC1B;;;;gBATQ,mBAAmB;gBAH1BC,cAAS;gBACTC,sBAAiB;gBAFjBC,eAAU;gBAMH,uBAAuB;;;4BAuB7BC,UAAK;kCACLA,UAAK;4BACLA,UAAK;2BACLA,UAAK;iCAMLA,UAAK,SAAC,aAAa;0BA0BnBA,UAAK;+BAWLA,UAAK;4BAGLC,WAAM;6BAGNA,WAAM;6BAGNA,WAAM;4BAYNC,iBAAY,SAAC,OAAO;;+BAtGvB;;;;;;;ACAA;;;;;;;;IAOE,kCAAS;;;;;IAAT,UAAU,GAAQ,EAAE,MAAY;QAE9B,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,GAAG,GAAG,CAAC,CAAC;SACT;QAED,OAAO,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAChC;;gBAZFC,SAAI,SAAC;oBACJ,IAAI,EAAE,YAAY;iBACnB;;;;yBAJD;;;;;AAmBA,AAAO,IAAM,UAAU,GAAG,UAAC,GAAW,EAAE,MAAc;IAEpD,qBAAM,EAAE,GAAG;QACT,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAC;QAC1B,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAC;QAC1B,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAC;QAC1B,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC;QACzB,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC;QACzB,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC;KAC1B,mBAAE,EAAE,GAAG,0BAA0B,CAAC;IAEnC,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;YACtB,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SAC7E;KACF;IACD,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;CAC9C;;;;;;ACpCD;;;;;;AAWA,+BAAoC,UAAsB,EAAE,OAA4B,EAAE,WAA6B;IACrH,OAAO,IAAI,mBAAmB,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;CAClE;;;;;;;;;IAkBQ,4BAAO;;;;;IAAd,UAAe,OAA6B,EAAE,WAA8B;QAC1E,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAC;gBACrC,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAC;gBAC9C;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,UAAU,EAAEC,qBAAmB;oBAC/B,IAAI,EAAE,CAACX,eAAU,EAAE,OAAO,EAAE,YAAY,CAAC;iBAC1C;aACF;SACF,CAAC;KACH;;gBA7BFY,aAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,oBAAoB;wBACpB,cAAc;qBACf;oBACD,OAAO,EAAE;wBACPC,mBAAY;qBACb;oBACD,OAAO,EAAE;wBACPA,mBAAY;wBACZ,oBAAoB;wBACpB,cAAc;qBACf;oBACD,SAAS,EAAE,CAAE,uBAAuB,CAAE;iBACvC;;;;+BA7BD;;;;;;;ACAA;IA6JE,8BAAoB,EAAqB,EAAU,KAA0B;QAAzD,OAAE,GAAF,EAAE,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAqB;;;;wBA1DzD,IAAI;;;;wBAGJ,KAAK;;;;oBAGT,IAAI,CAAC,KAAK,CAAC,IAAI;;;;yBAGnB,KAAK;;;;2BA8BmB,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;;;;qBAGpD,IAAIX,iBAAY,EAAU;;;;sBAGzB,IAAIA,iBAAY,EAAU;;;;sBAG1B,IAAIA,iBAAY,EAAU;KAW5C;0BA/EG,8CAAY;;;;;kBAAC,MAAc;YAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;;;;0BAKnB,wCAAM;;;;;;kBAAC,MAAc;;YAEvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;;;;;0BAsBhB,8CAAY;;;;;kBAAC,IAAa;;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;YAItB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE;;gBAGjD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;oBACjD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,KAAK;wBACzC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvB,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;qBACxB,CAAC,CAAC;iBACJ;aAEF;;;;;0BAMC,0CAAQ;;;;;;kBAAC,KAAa;YACxB,IAAI,CAAC,WAAW,GAAG,eAAe,GAAG,KAAK,CAAC;;;;;;;;IA0B7C,0CAAW;;;IAAX;QACE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KACxC;;gBAlJFY,cAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,0jDA8CT;oBACD,eAAe,EAAEC,4BAAuB,CAAC,MAAM;iBAChD;;;;gBA1DCV,sBAAiB;gBAMV,mBAAmB;;;iCAgEzBE,UAAK,SAAC,QAAQ;2BAOdA,UAAK,SAAC,KAAK;0BAQXA,UAAK;gCACLA,UAAK;0BACLA,UAAK;yBACLA,UAAK;6BAGLA,UAAK;6BAGLA,UAAK;yBAGLA,UAAK;iCAKLA,UAAK,SAAC,WAAW;6BAsBjBA,UAAK,SAAC,OAAO;gCAMbS,gBAAW,SAAC,OAAO;0BAGnBR,WAAM;2BAGNA,WAAM;2BAGNA,WAAM;mCAGNS,cAAS,SAAC,oBAAoB;6BAI9BA,cAAS,SAAC,UAAU;;+BA1JvB;;;;;;;ACAA;;;;;;AASA,+BAAoC,UAAsB,EAAE,OAA4B,EAAE,WAA6B;IACrH,OAAO,IAAI,mBAAmB,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;CAClE;;;;;;;;;IAeQ,yBAAO;;;;;IAAd,UAAe,OAA6B,EAAE,WAA8B;QAC1E,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAC;gBACrC,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAC;gBAC9C;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,UAAU,EAAEN,qBAAmB;oBAC/B,IAAI,EAAE,CAACX,eAAU,EAAE,OAAO,EAAE,YAAY,CAAC;iBAC1C;aACF;SACF,CAAC;KACH;;gBA1BFY,aAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,oBAAoB;qBACrB;oBACD,OAAO,EAAE;wBACP,oBAAoB;qBACrB;oBACD,OAAO,EAAE;wBACP,oBAAoB;wBACpB,oBAAoB;qBACrB;iBACF;;;;4BAxBD;;;;;;;ACAA;IAyLE,+BAAoB,EAAqB,EAAS,KAA0B;QAAxD,OAAE,GAAF,EAAE,CAAmB;QAAS,UAAK,GAAL,KAAK,CAAqB;;;;uBA/GxD,EAAE;;;;8BAGK,IAAI,CAAC,KAAK,CAAC,OAAO;;;;8BAGlB,EAAE;;;;4BAed,IAAI,CAAC,cAAc,CAAC,MAAM;;;;uBAI/B,KAAK;;;;wBAyBK,IAAI;;;;wBAGJ,KAAK;;;;yBAMb,KAAK;;;;8BAsCsB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;;;;qBAGtD,IAAIV,iBAAY,EAAU;;;;sBAGzB,IAAIA,iBAAY,EAAU;;;;sBAG1B,IAAIA,iBAAY,EAAU;KAO5C;0BAxGG,0CAAO;;;;;kBAAC,cAAwB;;YAClC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;;;;;0BAIvF,0CAAO;;;;;kBAAC,cAAwB;;YAClC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;;;;;0BAWvF,kDAAe;;;;;kBAAC,UAAkB;YACpC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;YAExC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;;;;0BAKzD,yCAAM;;;;;;kBAAC,MAAc;;YAEvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;;;;;0BAsBhB,+CAAY;;;;;kBAAC,IAAa;;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,IAAI,CAAC,eAAe,EAAE;;gBAExB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,cAAoC;;oBAGhE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;;wBAG1C,IAAI,IAAI,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;4BACvC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,KAAK;gCAClC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gCACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gCACvB,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;6BACxB,CAAC,CAAC;yBACJ;qBACF;iBACF,CAAC,CAAC;aACJ;;;;;0BAOC,2CAAQ;;;;;kBAAC,KAAa;;YAExB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;YAEnB,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,KAAK,CAAC;;;;;;;;IAsB/C,wCAAQ;;;IAAR;QAAA,iBAKC;;QAHC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SAC1F;KACF;;;;IAED,2CAAW;;;IAAX;QACE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,cAAoC;YAChE,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;SACpC,CAAC,CAAC;KACJ;;;;IAED,oCAAI;;;IAAJ;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;;;;IAED,oCAAI;;;IAAJ;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;gBAnMFY,cAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,q5CA4CT;oBACD,eAAe,EAAEC,4BAAuB,CAAC,MAAM;iBAChD;;;;gBAzDCV,sBAAiB;gBAMV,mBAAmB;;;4BAqEzBE,UAAK,SAAC,SAAS;4BAMfA,UAAK,SAAC,SAAS;oCAafA,UAAK,SAAC,MAAM;2BASZA,UAAK,SAAC,KAAK;0BAQXA,UAAK;gCACLA,UAAK;0BACLA,UAAK;yBACLA,UAAK;6BAGLA,UAAK;6BAGLA,UAAK;yBAGLA,UAAK;iCAKLA,UAAK,SAAC,WAAW;6BA2BjBA,UAAK,SAAC,OAAO;mCASbS,gBAAW,SAAC,OAAO;0BAGnBR,WAAM;2BAGNA,WAAM;2BAGNA,WAAM;oCAGNU,iBAAY,SAAC,oBAAoB;;gCAvLpC;;;;;;;ACAA;;;;;;AAUA,6BAAoC,UAAsB,EAAE,OAA4B,EAAE,WAA6B;IACrH,OAAO,IAAI,mBAAmB,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;CAClE;;;;;;;;;IAeQ,0BAAO;;;;;IAAd,UAAe,OAA6B,EAAE,WAA8B;QAC1E,OAAO;YACL,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAC;gBACrC,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAC;gBAC9C;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE,CAAClB,eAAU,EAAE,OAAO,EAAE,YAAY,CAAC;iBAC1C;aACF;SACF,CAAC;KACH;;gBA1BFY,aAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,qBAAqB;qBACtB;oBACD,OAAO,EAAE;wBACP,iBAAiB;qBAClB;oBACD,OAAO,EAAE;wBACP,iBAAiB;wBACjB,qBAAqB;qBACtB;iBACF;;;;6BAzBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}