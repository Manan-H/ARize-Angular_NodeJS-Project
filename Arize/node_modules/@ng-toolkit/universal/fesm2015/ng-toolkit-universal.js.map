{"version":3,"file":"ng-toolkit-universal.js.map","sources":["ng://@ng-toolkit/universal/ngt-universal/window.service.ts","ng://@ng-toolkit/universal/ngt-universal/local-storage-wrapper.service.ts","ng://@ng-toolkit/universal/ngt-universal/document.service.ts","ng://@ng-toolkit/universal/ngt-universal/ngt-universal.module.ts"],"sourcesContent":["import { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowService {\n    private _window: Window;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            // const req: any = this.injector.get(this.injector.get(USERAGENTTOKEN));\n            // this._window = {navigator: {userAgent: req.get('User-Agent')}};\n            this._window = {navigator: {userAgent: 'fakeAgent'}} as Window;\n        } else {\n            this._window = window;\n        }\n    }\n\n    get nativeWindow(): any {\n        return this._window;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class LocalStorageWrapper {\n    private localStorageRef;\n\n    constructor(@Inject(PLATFORM_ID) platformId) {\n        if (isPlatformBrowser(platformId)) {\n            this.localStorageRef = localStorage;\n        } else {\n            this.localStorageRef = {\n            clear: () => {/*noop*/},\n            getItem: (key: string) => undefined as string,\n            key: (index: number) => undefined as string,\n            removeItem: (key: string) => {/*noop*/},\n            setItem: (key: string, value: string) => {/*noop*/},\n            length: 0\n            };\n        }\n    }\n\n    get localStorage() {\n        return this.localStorageRef;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentService {\n    private _document: Document;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            this._document = <unknown> {\n                getElementById: (id: string) => new HTMLElement(),\n                getElementsByClassName: (className: string) => new HTMLCollection(),\n                getElementsByName: (name: string) => new NodeList(),\n                getElementsByTagName: (name: string) => new NodeList()\n            } as Document;\n        } else {\n            console.log('in browser, assigning document');\n            // this._document = document;\n            this._document = {} as Document;\n        }\n    }\n\n    get nativeDocument(): Document {\n        console.log('get native document');\n        console.log(this._document);\n        return this._document;\n    }\n}\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { WindowService } from './window.service';\nimport { LocalStorageWrapper } from './local-storage-wrapper.service';\nimport { DocumentService } from './document.service';\n\nexport * from './document.service';\n\nexport const WINDOW = new InjectionToken('ng-toolkit-window');\n\nexport function windowFactory(windowService: WindowService) {\n    return windowService.nativeWindow;\n}\n\nexport const LOCAL_STORAGE = new InjectionToken('ng-toolkit-local-storage');\n\nexport function localStorageFactory(localStorageWrapper: LocalStorageWrapper) {\n    return localStorageWrapper.localStorage;\n}\n\nexport const NGT_DOCUMENT = new InjectionToken('ng-toolkit-document');\n\nexport function documentFactory(documentService: DocumentService) {\n    console.log('document factory');\n    return documentService.nativeDocument;\n}\n\n@NgModule({\n    providers: [\n        WindowService,\n        { provide: WINDOW, useFactory: windowFactory, deps: [WindowService] },\n        DocumentService,\n        { provide: NGT_DOCUMENT, useFactory: documentFactory, deps: [DocumentService] },\n        LocalStorageWrapper,\n        { provide: LOCAL_STORAGE, useFactory: localStorageFactory, deps: [LocalStorageWrapper] }\n    ]\n})\nexport class NgtUniversalModule {}\n"],"names":[],"mappings":"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"}
